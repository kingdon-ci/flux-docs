"use strict";(self.webpackChunkweave_gitops_docs=self.webpackChunkweave_gitops_docs||[]).push([[245],{36740:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var o=r(87462),n=(r(67294),r(3905));const a={title:"Get Started",hide_title:!0},l="Get Started with the Terraform Controller",i={unversionedId:"terraform/get-started-terraform",id:"version-0.27.0/terraform/get-started-terraform",title:"Get Started",description:"Preflight Checks",source:"@site/versioned_docs/version-0.27.0/terraform/get-started-terraform.mdx",sourceDirName:"terraform",slug:"/terraform/get-started-terraform",permalink:"/docs/0.27.0/terraform/get-started-terraform",draft:!1,editUrl:"https://github.com/weaveworks/weave-gitops/edit/main/website/versioned_docs/version-0.27.0/terraform/get-started-terraform.mdx",tags:[],version:"0.27.0",frontMatter:{title:"Get Started",hide_title:!0},sidebar:"docs",previous:{title:"Introduction to Terraform Controller",permalink:"/docs/0.27.0/terraform/terraform-intro"},next:{title:"Using Terraform Templates",permalink:"/docs/0.27.0/terraform/using-terraform-templates"}},s={},p=[{value:"Preflight Checks",id:"preflight-checks",level:2},{value:"Setup",id:"setup",level:2},{value:"Other Installation Methods",id:"other-installation-methods",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Define Source",id:"define-source",level:3},{value:"The GitOps Automation Mode",id:"the-gitops-automation-mode",level:3},{value:"Other Examples",id:"other-examples",level:2}],c={toc:p};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"get-started-with-the-terraform-controller"},"Get Started with the Terraform Controller"),(0,n.kt)("h2",{id:"preflight-checks"},"Preflight Checks"),(0,n.kt)("p",null,"To set up the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/weaveworks/tf-controller"},"Terraform Controller")," (TF-Controller), follow the steps in the preflight checks. Here is a summary of what you will need to do:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Install Flux ",(0,n.kt)("strong",{parentName:"li"},"v0.32.0")," or later on your cluster. This includes installing the Flux CLI on your local machine and installing the Flux controllers on the cluster."),(0,n.kt)("li",{parentName:"ol"},"Configure the network firewall or security groups on your cluster to allow incoming connections to ",(0,n.kt)("strong",{parentName:"li"},"port 30000")," on ",(0,n.kt)("strong",{parentName:"li"},"each Runner's Pod in each namespace"),".\nThis will allow the Controller to communicate with the Runner's Pod via gRPC."),(0,n.kt)("li",{parentName:"ol"},"Configure the network firewall or security groups on your cluster to allow the Controller to download tar.gz BLOBs ",(0,n.kt)("strong",{parentName:"li"},"from the Source controller")," via ",(0,n.kt)("strong",{parentName:"li"},"port 80")," and\nto post events to ",(0,n.kt)("strong",{parentName:"li"},"the Notification controller")," via ",(0,n.kt)("strong",{parentName:"li"},"port 80"),".")),(0,n.kt)("p",null,"The exact steps for setting up the TF-controller will depend on the specific environment\nand infrastructure that you are using. The ",(0,n.kt)("a",{parentName:"p",href:"https://weaveworks.github.io/tf-controller/"},"project's documentation")," provides additional information to help with setup."),(0,n.kt)("h2",{id:"setup"},"Setup"),(0,n.kt)("p",null,"Perform the following actions to set up TF-Controller:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Create a local cluster using a tool such as ",(0,n.kt)("inlineCode",{parentName:"p"},"kind")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"minikube"),". This will allow you to develop and test TF-Controller in a local environment before deploying it to a production cluster."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"kind create cluster --name tf-controller\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Install the Flux CLI on your local machine. This will allow you to interact with the Flux controllers on your cluster."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"brew install fluxcd/tap/flux\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Prepare a Git repository to store the configuration files and manifests for Flux and TF-controller. For this example we'll use GitHub. To follow along, you'll need a GitHub account and ",(0,n.kt)("a",{parentName:"p",href:"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens"},"personal access token with repo permissions"),". You'll also need to properly configure your Git client by ",(0,n.kt)("a",{parentName:"p",href:"https://docs.github.com/en/get-started/getting-started-with-git/setting-your-username-in-git#setting-your-git-username-for-every-repository-on-your-computer"},"setting your username")," and ",(0,n.kt)("a",{parentName:"p",href:"https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-personal-account-on-github/managing-email-preferences/setting-your-commit-email-address#setting-your-email-address-for-every-repository-on-your-computer"},"email address"),". "))),(0,n.kt)("p",null,"Assuming your username is ",(0,n.kt)("inlineCode",{parentName:"p"},"$GITHUB_USER"),", you can create a new repository called ",(0,n.kt)("inlineCode",{parentName:"p"},"gitops-tf-controller")," using the following command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"export GITHUB_USER=<your github username>\nexport GITHUB_TOKEN=<your github personal access token>\n\ngh repo create $GITHUB_USER/gitops-tf-controller\n")),(0,n.kt)("ol",{start:4},(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Bootstrap the cluster with Flux v2 (v0.32.0 or later) using the path (for example) ",(0,n.kt)("inlineCode",{parentName:"p"},"./cluster/my-cluster"),". This will install Flux on the cluster and create a Flux system at ",(0,n.kt)("inlineCode",{parentName:"p"},"./cluster/my-cluster/flux-system"),"."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"git clone git@github.com:$GITHUB_USER/gitops-tf-controller.git\ncd gitops-tf-controller\n\nflux bootstrap github \\\n  --owner=$GITHUB_USER \\\n  --repository=gitops-tf-controller \\\n  --branch=main \\\n   --path=./cluster/my-cluster \\\n   --personal \\\n   --token-auth\n"))),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"Create a directory at ",(0,n.kt)("inlineCode",{parentName:"p"},"./cluster/my-cluster/infra/"),":"),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p ./cluster/my-cluster/infra/\n")))),(0,n.kt)("p",null,"Download the TF-controller manifest from ",(0,n.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/weaveworks/tf-controller/main/docs/release.yaml"},"the release location"),"\nand save it to ",(0,n.kt)("inlineCode",{parentName:"p"},"./cluster/my-cluster/infra/tf-controller.yaml"),"\u2014placing the file ",(0,n.kt)("inlineCode",{parentName:"p"},"tf-controller.yaml")," in this directory:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"```bash\ncurl -s https://raw.githubusercontent.com/weaveworks/tf-controller/main/docs/release.yaml > ./cluster/my-cluster/infra/tf-controller.yaml\n```\n")),(0,n.kt)("p",null,"Add the manifest file to the Git repository, then push the changes to your repository."),(0,n.kt)("ol",{start:6},(0,n.kt)("li",{parentName:"ol"},"In the same directory, create a ",(0,n.kt)("inlineCode",{parentName:"li"},"kustomization.yaml")," file that contains the following:",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre"},"```yaml\napiVersion: kustomize.config.k8s.io/v1beta1\nkind: Kustomization\nresources:\n  - tf-controller.yaml\n```\n")),"Add the ",(0,n.kt)("inlineCode",{parentName:"li"},"kustomization.yaml")," file to your Git repository, then push the changes to your repository.")),(0,n.kt)("p",null,"If you want to use TF-Controller with the Notification Controller,\nyou will also need to modify the manifest to enable the two controllers to work together.\nThe exact steps for doing this will depend on the specific requirements of your environment and the configuration of the Notification Controller.\nYou may need to refer to ",(0,n.kt)("a",{parentName:"p",href:"https://fluxcd.io/flux/cheatsheets/bootstrap/#enable-notifications-for-third-party-controllers"},"the documentation for the TF-Controller and Notification Controller")," for more information on how to set this up."),(0,n.kt)("h2",{id:"other-installation-methods"},"Other Installation Methods"),(0,n.kt)("p",null,"Before using TF-Controller, you must install Flux by using either ",(0,n.kt)("inlineCode",{parentName:"p"},"flux install")," or the ",(0,n.kt)("inlineCode",{parentName:"p"},"flux bootstrap")," command.\nMake sure you have the latest version of Flux. After that, you can install TF-controller with Flux HelmRelease with this command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f https://raw.githubusercontent.com/weaveworks/tf-controller/main/docs/release.yaml\n")),(0,n.kt)("p",null,"For the most recent TF-Controller release candidate, please use ",(0,n.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/weaveworks/tf-controller/main/docs/rc.yaml"},"rc.yaml"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f https://raw.githubusercontent.com/weaveworks/tf-controller/main/docs/rc.yaml\n")),(0,n.kt)("p",null,"or manually with Helm by:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"# Add tf-controller helm repository\nhelm repo add tf-controller https://weaveworks.github.io/tf-controller/\n\n# Install tf-controller\nhelm upgrade -i tf-controller tf-controller/tf-controller \\\n    --namespace flux-system\n")),(0,n.kt)("p",null,"For details on configurable parameters of the TF-controller chart,\nplease see ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/weaveworks/tf-controller/tree/main/charts/tf-controller#tf-controller-for-flux"},"this chart Readme"),"."),(0,n.kt)("p",null,"Alternatively, you can install TF-controller via ",(0,n.kt)("inlineCode",{parentName:"p"},"kubectl"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"export TF_CON_VER=v0.14.0\nkubectl apply -f https://github.com/weaveworks/tf-controller/releases/download/${TF_CON_VER}/tf-controller.crds.yaml\nkubectl apply -f https://github.com/weaveworks/tf-controller/releases/download/${TF_CON_VER}/tf-controller.rbac.yaml\nkubectl apply -f https://github.com/weaveworks/tf-controller/releases/download/${TF_CON_VER}/tf-controller.deployment.yaml\n")),(0,n.kt)("h2",{id:"quick-start"},"Quick Start"),(0,n.kt)("p",null,"Here's a simple example of how to GitOps your Terraform resources with TF-controller and Flux."),(0,n.kt)("h3",{id:"define-source"},"Define Source"),(0,n.kt)("p",null,"First, define a Source controller's source (",(0,n.kt)("inlineCode",{parentName:"p"},"GitRepository"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"Bucket"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"OCIRepository"),")\u2014for example:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: source.toolkit.fluxcd.io/v1beta1\nkind: GitRepository\nmetadata:\n  name: helloworld\n  namespace: flux-system\nspec:\n  interval: 30s\n  url: https://github.com/tf-controller/helloworld\n  ref:\n    branch: main\n")),(0,n.kt)("h3",{id:"the-gitops-automation-mode"},"The GitOps Automation Mode"),(0,n.kt)("p",null,"In this mode, Terraform resources will be planned and automatically applied for you. Enable it by setting ",(0,n.kt)("inlineCode",{parentName:"p"},".spec.approvePlan=auto"),": "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: infra.contrib.fluxcd.io/v1alpha1\nkind: Terraform\nmetadata:\n  name: helloworld\n  namespace: flux-system\nspec:\n  interval: 1m\n  approvePlan: auto\n  path: ./\n  sourceRef:\n    kind: GitRepository\n    name: helloworld\n    namespace: flux-system\n")),(0,n.kt)("p",null,"For a full list of features and how to use them, please visit the ",(0,n.kt)("a",{parentName:"p",href:"../terraform-intro"},"Terraform overview"),"."),(0,n.kt)("h2",{id:"other-examples"},"Other Examples"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A Terraform GitOps with Flux to automatically reconcile your ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/tf-controller/aws-iam-policies"},"AWS IAM Policies"),"."),(0,n.kt)("li",{parentName:"ul"},"GitOps an existing EKS cluster by partially importing its nodegroup and managing it with TF-controller: ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/tf-controller/eks-scaling"},"An EKS scaling example"),".")))}u.isMDXComponent=!0},3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var o=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=o.createContext({}),p=function(e){var t=o.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(r),h=n,f=u["".concat(s,".").concat(h)]||u[h]||m[h]||a;return r?o.createElement(f,l(l({ref:t},c),{},{components:r})):o.createElement(f,l({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,l=new Array(a);l[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:n,l[1]=i;for(var p=2;p<a;p++)l[p]=r[p];return o.createElement.apply(null,l)}return o.createElement.apply(null,r)}h.displayName="MDXCreateElement"}}]);