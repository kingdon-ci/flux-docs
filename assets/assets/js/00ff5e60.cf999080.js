"use strict";(self.webpackChunkweave_gitops_docs=self.webpackChunkweave_gitops_docs||[]).push([[64737],{83306:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(67294),a=n(88746);n(52426);const s={fontSize:16,marginLeft:4,fontVariant:"all-small-caps"};function i(e){let{tiers:t}=e;return r.createElement(a.Z,{title:`This feature is a available on ${t}.`,style:s},t)}},50313:(e,t,n)=>{n.d(t,{ZP:()=>i});var r=n(87462),a=(n(67294),n(3905));const s={toc:[]};function i(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},(0,a.kt)("strong",{parentName:"p"},"This feature is in alpha and certain aspects will change")),(0,a.kt)("p",{parentName:"admonition"},"We're very excited for people to use this feature.\nHowever, please note that changes in the API, behaviour and security will evolve.\nThe feature is suitable to use in controlled testing environments.")))}i.isMDXComponent=!0},86466:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var r=n(87462),a=(n(67294),n(3905)),s=n(83306),i=n(50313);const o={title:"Operations",hide_title:!0,toc_max_heading_level:5},l='Operations <TierLabel tiers="Enterprise" />',c={unversionedId:"explorer/operations",id:"version-0.33.0/explorer/operations",title:"Operations",description:"As platform engineer you could need to have a finer understanding on the underlying logic for Explorer. The following",source:"@site/versioned_docs/version-0.33.0/explorer/operations.mdx",sourceDirName:"explorer",slug:"/explorer/operations",permalink:"/docs/0.33.0/explorer/operations",draft:!1,editUrl:"https://github.com/weaveworks/weave-gitops/edit/main/website/versioned_docs/version-0.33.0/explorer/operations.mdx",tags:[],version:"0.33.0",frontMatter:{title:"Operations",hide_title:!0,toc_max_heading_level:5},sidebar:"docs",previous:{title:"Querying",permalink:"/docs/0.33.0/explorer/querying"},next:{title:"GitOps Run Overview",permalink:"/docs/0.33.0/gitops-run/gitops-run-overview"}},u={},d=[{value:"Debug Access Rules",id:"debug-access-rules",level:2},{value:"Monitoring",id:"monitoring",level:2},{value:"Metrics",id:"metrics",level:3},{value:"Querying",id:"querying",level:4},{value:"API Server",id:"api-server",level:5},{value:"Datastore Reads",id:"datastore-reads",level:5},{value:"Indexer Reads",id:"indexer-reads",level:5},{value:"Collecting",id:"collecting",level:4},{value:"Cluster Watcher",id:"cluster-watcher",level:5},{value:"Datastore Writes",id:"datastore-writes",level:5},{value:"Indexer Writes",id:"indexer-writes",level:5},{value:"Dashboard",id:"dashboard",level:3}],p={toc:d};function m(e){let{components:t,...o}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"operations-"},"Operations ",(0,a.kt)(s.Z,{tiers:"Enterprise",mdxType:"TierLabel"})),(0,a.kt)(i.ZP,{mdxType:"AlphaWarning"}),(0,a.kt)("p",null,"As platform engineer you could need to have a finer understanding on the underlying logic for Explorer. The following\noptions are available to you to operate and troubleshoot it."),(0,a.kt)("h2",{id:"debug-access-rules"},"Debug Access Rules"),(0,a.kt)("p",null,"It is a debugging tool to make visible explorer authorization logic. You could find it as tab ",(0,a.kt)("inlineCode",{parentName:"p"},"Access Rules"),"  alongside\nthe ",(0,a.kt)("inlineCode",{parentName:"p"},"Query")," tab."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"access rules",src:n(77380).Z,width:"1443",height:"819"})),(0,a.kt)("p",null,"You could discover by ",(0,a.kt)("inlineCode",{parentName:"p"},"Cluster")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Subject")," the ",(0,a.kt)("inlineCode",{parentName:"p"},"Kinds")," it is allowed to read. These are the rules that\nwill be the source of truth doing authorization when a user does a query."),(0,a.kt)("h2",{id:"monitoring"},"Monitoring"),(0,a.kt)("p",null,"Explorer provides the following telemetry to use for operations."),(0,a.kt)("h3",{id:"metrics"},"Metrics"),(0,a.kt)("p",null,"Explorer exports ",(0,a.kt)("a",{parentName:"p",href:"https://prometheus.io/"},"Prometheus")," metrics. Configuration happens during releasing as shown below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'---\napiVersion: helm.toolkit.fluxcd.io/v2beta1\nkind: HelmRelease\nmetadata:\n  name: weave-gitops-enterprise\n  namespace: flux-system\nspec:\n  values:\n    #### Metrics - Prometheus metrics configuration\n    metrics:\n      # Enables metrics generation and prometheus endpoint\n      enabled: true\n      service:\n        # -- Port to start the metrics exporter on\n        port: 8080\n        # -- Annotations to set on the service\n        annotations:\n          prometheus.io/scrape: "true"\n          prometheus.io/path: "/metrics"\n          prometheus.io/port: "{{ .Values.metrics.service.port }}"\n')),(0,a.kt)("h4",{id:"querying"},"Querying"),(0,a.kt)("p",null,"Explorer querying path is composed of three components exporting metrics:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"API server"),(0,a.kt)("li",{parentName:"ul"},"Datastore Reads"),(0,a.kt)("li",{parentName:"ul"},"Indexer Reads")),(0,a.kt)("h5",{id:"api-server"},"API Server"),(0,a.kt)("p",null,"Based on ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/slok/go-http-metrics/blob/master/metrics/prometheus/prometheus.go"},"go-http-metrics"),", the following\nmetrics are generated."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Request Duration:")," histogram with the latency of the HTTP requests."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'http_request_duration_seconds_bucket{handler="/v1/query",method="POST",le="0.05"} 0\nhttp_request_duration_seconds_sum{handler="/v1/query",method="POST"} 10.088081923\nhttp_request_duration_seconds_count{handler="/v1/query",method="POST"} 51\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Response Size:")," histogram with the size of the HTTP responses in bytes"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'http_response_size_bytes_bucket{handler="/v1/query",method="POST",le="0.05"} 10\nhttp_response_size_bytes_sum{handler="/v1/query",method="POST"} 120\nhttp_response_size_bytes_count{handler="/v1/query",method="POST"} 10\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Requests In Flight:")," gauge with the number of inflight requests being handled at the same time."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'http_requests_inflight{handler="/v1/query"} 0\n')),(0,a.kt)("h5",{id:"datastore-reads"},"Datastore Reads"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Request Latency:")," histogram with the latency of the datastore read requests."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"action")," is the datastore read operation that could be either ",(0,a.kt)("inlineCode",{parentName:"li"},"GetObjects"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"GetAccessRules"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"GetObjectByID"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"GetRoles")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"GetRoleBindings"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"status")," is the result of the operation. It could be either  read operation that could be either ",(0,a.kt)("inlineCode",{parentName:"li"},"success")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"error"),".")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'datastore_latency_seconds_bucket{action="GetObjectByID", le="+Inf", status="success"} 1175\ndatastore_latency_seconds_bucket{action="GetObjectByID", le="0.01", status="success"} 1174\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'datastore_latency_seconds_count{action="GetObjectByID",  status="success"} 1175\ndatastore_latency_seconds_count{action="GetRoleBindings",  status="success"} 47\ndatastore_latency_seconds_count{action="GetRoles",  status="success"} 47\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'datastore_latency_seconds_sum{action="GetObjectByID",  status="success"} 0.6924557999999995\ndatastore_latency_seconds_sum{action="GetRoleBindings",  status="success"} 1.329158916\ndatastore_latency_seconds_sum{action="GetRoles",  status="success"} 3.942473879999999\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Requests In Flight:")," gauge with the number of inflight requests being handled at the same time."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"action")," is the datastore read operation that could be either ",(0,a.kt)("inlineCode",{parentName:"li"},"GetObjects"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"GetAccessRules"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"GetObjectByID"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"GetRoles")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"GetRoleBindings"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'datastore_inflight_requests{action="GetObjectByID"} 0\ndatastore_inflight_requests{action="GetRoleBindings"} 0\ndatastore_inflight_requests{action="GetRoles"} 0\n')),(0,a.kt)("h5",{id:"indexer-reads"},"Indexer Reads"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Request Latency:")," histogram with the latency of the indexer read requests."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"action")," is the index read operation that could be either ",(0,a.kt)("inlineCode",{parentName:"li"},"ListFacets")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"Search")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"status")," is the result of the operation. It could be either  read operation that could be either ",(0,a.kt)("inlineCode",{parentName:"li"},"success")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"error"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'indexer_latency_seconds_bucket{action="ListFacets", le="+Inf", status="success"} 1\nindexer_latency_seconds_bucket{action="Search", le="+Inf", status="success"} 47\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'indexer_latency_seconds_sum{action="ListFacets", status="success"} 0.008928666\nindexer_latency_seconds_sum{action="Search", status="success"} 0.06231312599999999\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'indexer_latency_seconds_count{action="ListFacets", status="success"} 1\nindexer_latency_seconds_count{action="Search", status="success"} 47\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Requests In Flight:")," gauge with the number of inflight requests being handled at the same time."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"action")," is the index read operation that could be either ",(0,a.kt)("inlineCode",{parentName:"li"},"ListFacets")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"Search"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'indexer_inflight_requests{action="ListFacets"} 0\nindexer_inflight_requests{action="Search"} 0\n')),(0,a.kt)("h4",{id:"collecting"},"Collecting"),(0,a.kt)("p",null,"Explorer collecting path is composed of three components exporting metrics:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Cluster Watcher Manager"),(0,a.kt)("li",{parentName:"ul"},"Datastore Writes"),(0,a.kt)("li",{parentName:"ul"},"Indexer Writes")),(0,a.kt)("p",null,"The following metrics are available to monitor its health."),(0,a.kt)("h5",{id:"cluster-watcher"},"Cluster Watcher"),(0,a.kt)("p",null,"The metric ",(0,a.kt)("inlineCode",{parentName:"p"},"collector_cluster_watcher")," provides the number of the cluster watchers it the following ",(0,a.kt)("inlineCode",{parentName:"p"},"status"),":"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Starting: a cluster watcher is starting at the back of detecting that a new cluster has been registered."),(0,a.kt)("li",{parentName:"ul"},"Started: cluster watcher has been started and collecting events from the remote cluster. This is the stable state."),(0,a.kt)("li",{parentName:"ul"},"Stopping: a cluster has been deregistered so its cluster watcher is no longer required. In the process of stopping it."),(0,a.kt)("li",{parentName:"ul"},"Failed: a cluster watcher has failed during the creation or starting process and cannot collect events from the remote clusters. This is the unstable state.")),(0,a.kt)("p",null,"Where ",(0,a.kt)("inlineCode",{parentName:"p"},"collector")," is the type of collector, it could be"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"rbac: for collecting RBAC resources (ie roles)"),(0,a.kt)("li",{parentName:"ul"},"objects: for collecting non-rbac resources (ie kustomizations)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'collector_cluster_watcher{collector="objects", status="started"} 1\ncollector_cluster_watcher{collector="objects", status="starting"} 0\ncollector_cluster_watcher{collector="rbac", status="started"} 1\ncollector_cluster_watcher{collector="rbac", status="starting"} 0\n')),(0,a.kt)("p",null,"A sum on ",(0,a.kt)("inlineCode",{parentName:"p"},"collector_cluster_watcher")," gives the total number of cluster watchers that should be equal to the number of clusters"),(0,a.kt)("h5",{id:"datastore-writes"},"Datastore Writes"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Request Latency:")," histogram with the latency of the datastore write requests."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"action")," is the datastore write operation that could be either ",(0,a.kt)("inlineCode",{parentName:"li"},"StoreRoles"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"StoreRoleBindings"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"StoreObjects"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"DeleteObjects"),",\n",(0,a.kt)("inlineCode",{parentName:"li"},"DeleteAllObjects"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"DeleteRoles"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"DeleteAllRoles"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"DeleteRoleBindings"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"DeleteAllRoleBindings")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"status")," is the result of the operation. It could be either  read operation that could be either ",(0,a.kt)("inlineCode",{parentName:"li"},"success")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"error"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'datastore_latency_seconds_bucket{action="StoreRoles", le="+Inf", status="success"} 1175\ndatastore_latency_seconds_bucket{action="StoreRoles", le="0.01", status="success"} 1174\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'datastore_latency_seconds_count{action="StoreRoles",  status="success"} 1175\ndatastore_latency_seconds_count{action="DeleteRoles",  status="success"} 47\ndatastore_latency_seconds_count{action="DeleteAllRoleBindings",  status="success"} 47\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'datastore_latency_seconds_sum{action="StoreRoles",  status="success"} 0.6924557999999995\ndatastore_latency_seconds_sum{action="DeleteRoles",  status="success"} 1.329158916\ndatastore_latency_seconds_sum{action="DeleteAllRoleBindings",  status="success"} 3.942473879999999\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Requests In Flight:")," gauge with the number of inflight write requests being handled at the same time."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"action")," is the datastore write operation that could be either ",(0,a.kt)("inlineCode",{parentName:"li"},"StoreRoles"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"StoreRoleBindings"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"StoreObjects"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"DeleteObjects"),",\n",(0,a.kt)("inlineCode",{parentName:"li"},"DeleteAllObjects"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"DeleteRoles"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"DeleteAllRoles"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"DeleteRoleBindings"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"DeleteAllRoleBindings"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'datastore_inflight_requests{action="StoreRoles"} 0\ndatastore_inflight_requests{action="StoreRoleBindings"} 0\ndatastore_inflight_requests{action="DeleteAllRoleBindings"} 0\n')),(0,a.kt)("h5",{id:"indexer-writes"},"Indexer Writes"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Request Latency:")," histogram with the latency of the indexer write requests."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"action")," is the index write operation that could be either ",(0,a.kt)("inlineCode",{parentName:"li"},"Add"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Remove")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"RemoveByQuery")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"status")," is the result of the operation. It could be either ",(0,a.kt)("inlineCode",{parentName:"li"},"success")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"error"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'indexer_latency_seconds_bucket{action="Add",status="success",le="+Inf"} 109\nindexer_latency_seconds_bucket{action="Remove",status="success",le="+Inf"} 3\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'indexer_latency_seconds_sum{action="Add",status="success"} 8.393912168\nindexer_latency_seconds_sum{action="Remove",status="success"} 0.012298476\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'indexer_latency_seconds_count{action="Add",status="success"} 109\nindexer_latency_seconds_count{action="Remove",status="success"} 3\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Requests In Flight:")," gauge with the number of inflight requests being handled at the same time."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"action")," is the index write operation that could be either ",(0,a.kt)("inlineCode",{parentName:"li"},"Add"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"Remove")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"RemoveByQuery"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'indexer_inflight_requests{action="Add"} 0\nindexer_inflight_requests{action="Remove"} 0\n')),(0,a.kt)("h3",{id:"dashboard"},"Dashboard"),(0,a.kt)("p",null,"You could leverage ",(0,a.kt)("a",{target:"_blank",href:n(98900).Z},"this grafana dashboard")," in Grafana to monitor its ",(0,a.kt)("a",{parentName:"p",href:"https://sre.google/sre-book/monitoring-distributed-systems/#xref_monitoring_golden-signals"},"golden signals")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"explorer",src:n(94512).Z,width:"2374",height:"1600"})))}m.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||s;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[d]="string"==typeof e?e:a,i[1]=o;for(var c=2;c<s;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},98900:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/explorer-b4ce1d84166557b3d1f00aaffbcd6eb5.json"},77380:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/debug-access-rules-30bb70ad03313bc32fe8ca7b41eee0e6.png"},94512:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/explorer-query-metrics-87ba3ddbfb12169b31b27e4f9ea8c722.png"}}]);