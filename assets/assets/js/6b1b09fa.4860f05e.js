"use strict";(self.webpackChunkweave_gitops_docs=self.webpackChunkweave_gitops_docs||[]).push([[60692],{20848:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>u});var i=n(87462),a=(n(67294),n(3905));const r={title:"Weave Policy Agent Configuration",hide_title:!0},o="Configuration",l={unversionedId:"policy/configuration",id:"version-0.16.0/policy/configuration",title:"Weave Policy Agent Configuration",description:"The config file is the single entry point for configuring the agent.",source:"@site/versioned_docs/version-0.16.0/policy/configuration.mdx",sourceDirName:"policy",slug:"/policy/configuration",permalink:"/docs/0.16.0/policy/configuration",draft:!1,editUrl:"https://github.com/weaveworks/weave-gitops/edit/main/website/versioned_docs/version-0.16.0/policy/configuration.mdx",tags:[],version:"0.16.0",frontMatter:{title:"Weave Policy Agent Configuration",hide_title:!0},sidebar:"docs",previous:{title:"Weave Policy Profile",permalink:"/docs/0.16.0/policy/weave-policy-profile"},next:{title:"Weave Policy Set",permalink:"/docs/0.16.0/policy/policy-set"}},s={},u=[{value:"Validation Sinks Configuration",id:"validation-sinks-configuration",level:2},{value:"Kubernetes Events",id:"kubernetes-events",level:3},{value:"Flux Notification Controller",id:"flux-notification-controller",level:3},{value:"File System",id:"file-system",level:3},{value:"ElasticSearch",id:"elasticsearch",level:3},{value:"Insertion modes",id:"insertion-modes",level:4}],c={toc:u};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"The config file is the single entry point for configuring the agent."),(0,a.kt)("p",null,"The agent needs the following parameters to be provided in the configuration yaml file:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"kubeConfigFile"),": path to the kubernetes config file to access the cluster"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"accountId"),": unique identifier that signifies the owner of that agent"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"clusterId"),": unique identifier for the cluster that the agent will run against")),(0,a.kt)("p",null,"There are additional parameters could be provided:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"logLevel"),': app log level (default: "info")'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"probesListen"),': address for the probes server to run on (default: ":9000")'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"metricsAddress"),': address the metric endpoint binds to (default: ":8080")'),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"audit"),": defines cluster periodical audit configuration including the supported sinks (disabled by default)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"admission"),": defines admission control configuration including the supported sinks and webhooks (disabled by default)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tfAdmission"),": defines terraform admission control configuration including the supported sinks (disabled by default)")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'accountId: "account-id"\nclusterId: "cluster-id"\nkubeConfigFile: "/.kube/config"\nlogLevel: "Info"\nadmission:\n   enabled: true\n   sinks:\n      filesystemSink:\n         fileName: admission.txt\naudit:\n   enabled: true\n   writeCompliance: true\n   sinks:\n      filesystemSink:\n         fileName: audit.txt\n')),(0,a.kt)("h2",{id:"validation-sinks-configuration"},"Validation Sinks Configuration"),(0,a.kt)("h3",{id:"kubernetes-events"},"Kubernetes Events"),(0,a.kt)("p",null,"This sink is used to export validation results as kubernetes native events. Kubernetes event has a retention period and it set by default to 1 hour, you can configure the kubernetes ",(0,a.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/command-line-tools-reference/kube-apiserver/"},"api-server")," to update the period."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Configuration")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"sinks:\n  k8sEventsSink:\n    enabled: true\n")),(0,a.kt)("h3",{id:"flux-notification-controller"},"Flux Notification Controller"),(0,a.kt)("p",null,"This sink sends the validation results to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/fluxcd/notification-controller"},"Flux Notification Controller"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Configuration")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"sinks:\n  fluxNotificationSink:\n    address: <>\n")),(0,a.kt)("h3",{id:"file-system"},"File System"),(0,a.kt)("p",null,"File system sink writes the validation results to a text file. The file will be located at ",(0,a.kt)("inlineCode",{parentName:"p"},"/logs/<filename>")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Configuration")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"sinks:\n  fileSystemSink:\n    fileName: audit.txt\n")),(0,a.kt)("h3",{id:"elasticsearch"},"ElasticSearch"),(0,a.kt)("p",null,"This sink stores the validation results in ElasticSearch."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Configuration")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"sinks:\n  elasticSink:\n    address: http://localhost:9200    # ElasticSearch server address\n    username: <elastic username>      # User credentials to access ElasticSearch service\n    password: <elastic password>      # User credentials to access ElasticSearch service\n    indexName: <index_name>           # index name the results would be written in\n    insertionMode: <insertion mode>   # It could be a choice of both insert or upsert, it defines the way the document is written.\n")),(0,a.kt)("h4",{id:"insertion-modes"},"Insertion modes"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"insert"),": would give an insight of all the historical data, doesn't update or delete any old records. so the index would contain a log for all validation objects.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"p"},"upsert"),": Would update the old result of validating an entity against a policy happens in the same day, so the index would only contain the latest validation results for a policy and entity combination per day."))))}d.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var i=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),u=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return i.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),f=a,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||r;return n?i.createElement(m,o(o({ref:t},c),{},{components:n})):i.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<r;u++)o[u]=n[u];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"}}]);