"use strict";(self.webpackChunkweave_gitops_docs=self.webpackChunkweave_gitops_docs||[]).push([[59012],{74526:(e,t,n)=>{n.d(t,{Z:()=>i});var o=n(67294),r=n(88746);n(52426);const a={fontSize:16,marginLeft:4,fontVariant:"all-small-caps"};function i(e){let{tiers:t}=e;return o.createElement(r.Z,{title:`This feature is a available on ${t}.`,style:a},t)}},33925:(e,t,n)=>{n.d(t,{ZP:()=>i});var o=n(87462),r=(n(67294),n(3905));const a={toc:[]};function i(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},a,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"To run this example you will need extra RBAC")),(0,r.kt)("p",{parentName:"admonition"},"This particular example creates kustomizations, so you will need to add the below RBAC\nto the ",(0,r.kt)("inlineCode",{parentName:"p"},"gitopssets-controller-manager")," service account to allow it to create kustomizations."),(0,r.kt)("p",{parentName:"admonition"},"Check out the ",(0,r.kt)("a",{parentName:"p",href:"/docs/0.18.0/gitopssets/intro#security"},"Security")," section for more information."),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("strong",{parentName:"p"},"However this will change in the next release with impersonation. Instead you can choose a service account\nfor each ",(0,r.kt)("inlineCode",{parentName:"strong"},"GitOpsSet")," that has the required permissions for creating the rendered resources in the\n",(0,r.kt)("inlineCode",{parentName:"strong"},"templates")," section.")),(0,r.kt)("p",{parentName:"admonition"},"Additional RBAC for the ",(0,r.kt)("inlineCode",{parentName:"p"},"gitopssets-controller-manager")," service account:"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Expand to see SA resources"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  name: demo-role\nrules:\n- apiGroups:\n  - kustomize.toolkit.fluxcd.io\n  resources:\n  - kustomizations\n  verbs:\n  - create\n  - delete\n  - get\n  - list\n  - patch\n  - update\n  - watch\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: demo-role-binding\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: demo-role\nsubjects:\n- kind: ServiceAccount\n  name: gitopssets-controller-manager\n  namespace: flux-system\n")))))}i.isMDXComponent=!0},51943:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>p,toc:()=>c});var o=n(87462),r=(n(67294),n(3905)),a=n(74526),i=n(33925);const s={title:"GitRepository generator",hide_title:!0},l='GitRepository generator <TierLabel tiers="enterprise" />',p={unversionedId:"gitopssets/git-generator",id:"version-0.18.0/gitopssets/git-generator",title:"GitRepository generator",description:"Generation from files",source:"@site/versioned_docs/version-0.18.0/gitopssets/git-generator.mdx",sourceDirName:"gitopssets",slug:"/gitopssets/git-generator",permalink:"/docs/0.18.0/gitopssets/git-generator",draft:!1,editUrl:"https://github.com/weaveworks/weave-gitops/edit/main/website/versioned_docs/version-0.18.0/gitopssets/git-generator.mdx",tags:[],version:"0.18.0",frontMatter:{title:"GitRepository generator",hide_title:!0},sidebar:"docs",previous:{title:"List generator",permalink:"/docs/0.18.0/gitopssets/list-generator"},next:{title:"Matrix generator",permalink:"/docs/0.18.0/gitopssets/matrix-generator"}},m={},c=[{value:"Generation from files",id:"generation-from-files",level:2},{value:"Example",id:"example",level:3},{value:"Generation from directories",id:"generation-from-directories",level:2},{value:"Example",id:"example-1",level:3}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"gitrepository-generator-"},"GitRepository generator ",(0,r.kt)(a.Z,{tiers:"enterprise",mdxType:"TierLabel"})),(0,r.kt)("h2",{id:"generation-from-files"},"Generation from files"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"gitRepository")," generator allows you to generate resources from the contents of files in a Git repository.\nIt operates on Flux GitRepositories.\nWhen a GitRepository is updated, this will trigger a regeneration of templates.\nThe generator operates in two different ways, you can parse files (YAML or JSON) into Elements, or you can scan directories for subdirectories."),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: templates.weave.works/v1alpha1\nkind: GitOpsSet\nmetadata:\n  labels:\n    app.kubernetes.io/name: gitopsset\n    app.kubernetes.io/instance: gitopsset-sample\n    app.kubernetes.io/part-of: gitopssets-controller\n    app.kubernetes.io/managed-by: kustomize\n    app.kubernetes.io/created-by: gitopssets-controller\n  name: repository-sample\nspec:\n  generators:\n    - gitRepository:\n        repositoryRef: go-demo-repo\n        files:\n          - path: examples/generation/dev.yaml\n          - path: examples/generation/production.yaml\n          - path: examples/generation/staging.yaml\n  templates:\n    - content:\n        kind: Kustomization\n        apiVersion: kustomize.toolkit.fluxcd.io/v1beta2\n        metadata:\n          name: "{{ .Element.env }}-demo"\n          labels:\n            app.kubernetes.io/name: go-demo\n            app.kubernetes.io/instance: "{{ .Element.env }}"\n            com.example/team: "{{ .Element.team }}"\n        spec:\n          interval: 5m\n          path: "./examples/kustomize/environments/{{ .Element.env }}"\n          prune: true\n          sourceRef:\n            kind: GitRepository\n            name: go-demo-repo\n\n')),(0,r.kt)("p",null,"In this example, a ",(0,r.kt)("a",{parentName:"p",href:"https://fluxcd.io/flux/components/source/gitrepositories/"},"Flux ",(0,r.kt)("inlineCode",{parentName:"a"},"GitRepository"))," called ",(0,r.kt)("inlineCode",{parentName:"p"},"go-demo-repo")," in the same namespace as the ",(0,r.kt)("inlineCode",{parentName:"p"},"GitOpsSet")," will be tracked, and ",(0,r.kt)("inlineCode",{parentName:"p"},"Kustomization")," resources will be generated from the three files listed."),(0,r.kt)("p",null,"These files can be JSON or YAML."),(0,r.kt)("p",null,"In this example we expect to find the following structure in the files:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title=examples/generation/dev.yaml",title:"examples/generation/dev.yaml"},"env: dev\nteam: developers\n")),(0,r.kt)("p",null,"Changes pushed to the ",(0,r.kt)("inlineCode",{parentName:"p"},"GitRepository")," will result in rereconciliation of the templates into the cluster."),(0,r.kt)("h2",{id:"generation-from-directories"},"Generation from directories"),(0,r.kt)("h3",{id:"example-1"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: templates.weave.works/v1alpha1\nkind: GitOpsSet\nmetadata:\n  labels:\n    app.kubernetes.io/name: gitopsset\n    app.kubernetes.io/instance: gitopsset-sample\n    app.kubernetes.io/part-of: gitopssets-controller\n    app.kubernetes.io/managed-by: kustomize\n    app.kubernetes.io/created-by: gitopssets-controller\n  name: repository-sample\nspec:\n  generators:\n    - gitRepository:\n        repositoryRef: go-demo-repo\n        directories:\n          - path: examples/kustomize/environments/*\n  templates:\n    - content:\n        kind: Kustomization\n        apiVersion: kustomize.toolkit.fluxcd.io/v1beta2\n        metadata:\n          name: "{{ .Element.Base }}-demo"\n          labels:\n            app.kubernetes.io/name: go-demo\n            app.kubernetes.io/instance: "{{ .Element.Base }}"\n            com.example/team: "{{ .Element.Base }}"\n        spec:\n          interval: 5m\n          path: "{{ .Element.Directory }}"\n          prune: true\n          sourceRef:\n            kind: GitRepository\n            name: go-demo-repo\n')),(0,r.kt)("p",null,"In this example, a Flux GitRepository called go-demo-repo in the same namespace as the GitOpsSet will be tracked, and Kustomization resources are generated from paths within the examples/kustomize/environments/* directory within the repository."),(0,r.kt)("p",null,"Each generated element has two keys, .Element.Directory which will be a repo-relative path and .Element.Base which contains the last element of the path, for example, for a directory ./examples/kustomize/environments/production this will be production."),(0,r.kt)("p",null,"It is also possible to exclude paths from the generated list, for example, if you do not want to generate for a directory you can exclude it with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: templates.weave.works/v1alpha1\nkind: GitOpsSet\nmetadata:\n  name: repository-sample\nspec:\n  generators:\n    - gitRepository:\n        repositoryRef: go-demo-repo\n        directories:\n          - path: examples/kustomize/environments/*\n          - path: examples/kustomize/environments/production\n            exclude: true\n  templates:\n    - content:\n")),(0,r.kt)("p",null,"In this case, all directories that are subdirectories of examples/kustomize/environments will be generated, but not examples/kustomize/environments/production."),(0,r.kt)("p",null,"Note: The directory tree detection is restricted to the same directory as the path, no recursion is done."),(0,r.kt)("p",null,"In fact the path is treated as a Glob."),(0,r.kt)("p",null,"For security reasons, you need to explicitly list out the files that the generator should parse."),(0,r.kt)(i.ZP,{mdxType:"RBACWarning"}))}d.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>g});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,g=c["".concat(l,".").concat(d)]||c[d]||u[d]||a;return n?o.createElement(g,i(i({ref:t},m),{},{components:n})):o.createElement(g,i({ref:t},m))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);