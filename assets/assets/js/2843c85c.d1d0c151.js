"use strict";(self.webpackChunkweave_gitops_docs=self.webpackChunkweave_gitops_docs||[]).push([[41346],{37536:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(67294),r=a(88746);a(52426);const i={fontSize:16,marginLeft:4,fontVariant:"all-small-caps"};function l(e){let{tiers:t}=e;return n.createElement(r.Z,{title:`This feature is a available on ${t}.`,style:i},t)}},86310:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>N,frontMatter:()=>p,metadata:()=>c,toc:()=>m});var n=a(87462),r=(a(67294),a(3905)),i=a(37536),l=a(74354),o=a(17779),s=a(87585);const p={title:"Azure and Weave GitOps Enterprise Installation",hide_title:!0},u='Azure and Weave GitOps Enterprise Installation<TierLabel tiers="Enterprise" />',c={unversionedId:"enterprise/getting-started/install-enterprise-azure",id:"version-0.32.0/enterprise/getting-started/install-enterprise-azure",title:"Azure and Weave GitOps Enterprise Installation",description:"Once you successfully create your Kubernetes cluster in Azure Marketplace, follow these steps to Install Weave GitOps Enterprise. These instructions apply to both Azure AKS and Azure ARC clusters\u2014they'll behave in the same way.",source:"@site/versioned_docs/version-0.32.0/enterprise/getting-started/install-enterprise-azure.mdx",sourceDirName:"enterprise/getting-started",slug:"/enterprise/getting-started/install-enterprise-azure",permalink:"/docs/0.32.0/enterprise/getting-started/install-enterprise-azure",draft:!1,editUrl:"https://github.com/weaveworks/weave-gitops/edit/main/website/versioned_docs/version-0.32.0/enterprise/getting-started/install-enterprise-azure.mdx",tags:[],version:"0.32.0",frontMatter:{title:"Azure and Weave GitOps Enterprise Installation",hide_title:!0},sidebar:"docs",previous:{title:"Enterprise Releases",permalink:"/docs/0.32.0/enterprise/getting-started/releases-enterprise"},next:{title:"Join a Cluster with Azure Flux",permalink:"/docs/0.32.0/enterprise/getting-started/join-cluster-azure-flux"}},d={},m=[{value:"1. Choose the \u201cGitOps\u201d Option in the Marketplace",id:"1-choose-the-gitops-option-in-the-marketplace",level:2},{value:"Optional: Install CAPZ, the CAPI Provider",id:"optional-install-capz-the-capi-provider",level:3},{value:"2. Apply the Entitlements Secret",id:"2-apply-the-entitlements-secret",level:2},{value:"3. Configure Access for Writing to Git from the UI",id:"3-configure-access-for-writing-to-git-from-the-ui",level:2},{value:"4. Configure Your Password",id:"4-configure-your-password",level:2},{value:"5. Install Weave GitOps Enterprise to Your Cluster",id:"5-install-weave-gitops-enterprise-to-your-cluster",level:2},{value:"6. Apply Extra Configuration",id:"6-apply-extra-configuration",level:2},{value:"Available Configuration Options",id:"available-configuration-options",level:3},{value:"7. Check That It Works",id:"7-check-that-it-works",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Next Steps",id:"next-steps",level:2}],h=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},k=h("Tabs"),g=h("TabItem"),f={toc:m};function N(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"azure-and-weave-gitops-enterprise-installation"},"Azure and Weave GitOps Enterprise Installation",(0,r.kt)(i.Z,{tiers:"Enterprise",mdxType:"TierLabel"})),(0,r.kt)("p",null,"Once you successfully create your Kubernetes cluster in Azure Marketplace, follow these steps to Install Weave GitOps Enterprise. These instructions apply to both Azure AKS and Azure ARC clusters\u2014they'll behave in the same way."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"If you have already installed ",(0,r.kt)("a",{parentName:"p",href:"https://fluxcd.io/flux/cmd/"},"Flux"),", then Azure Flux will refuse to install.")),(0,r.kt)("h2",{id:"1-choose-the-gitops-option-in-the-marketplace"},"1. Choose the \u201cGitOps\u201d Option in the Marketplace"),(0,r.kt)("p",null,'Search for Weave GitOps Enterprise in the "Extensions + Applications" of the ',(0,r.kt)("a",{parentName:"p",href:"https://portal.azure.com/signin/index/"},"Azure Marketplace"),'. Click the "GitOps" option. This will take you to a screen that presents a first-class item called ',(0,r.kt)("inlineCode",{parentName:"p"},"Type: Flux v2"),"."),(0,r.kt)("p",null,"Click GitOps => Create."),(0,r.kt)("p",null,"Add the config name, namespace (default), scope: cluster, type (Flux v2), and continuous reconciliation option. Your entries should look like this:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Configuration: flux-system"),(0,r.kt)("li",{parentName:"ul"},"Namespace: flux-system"),(0,r.kt)("li",{parentName:"ul"},"Scope: Cluster")),(0,r.kt)("p",null,"All of the displayed properties for the Flux objects screen are the same as what you'd supply to Flux bootstrap."),(0,r.kt)("h3",{id:"optional-install-capz-the-capi-provider"},"Optional: Install CAPZ, the CAPI Provider"),(0,r.kt)("p",null,'If you are planning to manage or connect CAPI clusters to the WE service make sure you first install the CAPI provider. Then during the WE installation process be sure to select the "Enable CAPI support" checkbox.'),(0,r.kt)("h2",{id:"2-apply-the-entitlements-secret"},"2. Apply the Entitlements Secret"),(0,r.kt)("p",null,"Contact ",(0,r.kt)("a",{parentName:"p",href:"mailto:sales@weave.works"},"sales@weave.works")," for a valid entitlements secret. This will come in the form of a file \u201centitlements.yaml\u201d. Apply it to the cluster:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl apply -f entitlements.yaml\n")),(0,r.kt)("h2",{id:"3-configure-access-for-writing-to-git-from-the-ui"},"3. Configure Access for Writing to Git from the UI"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"(This section is the same as what you'll find in the main WGE install documentation.)")),(0,r.kt)("p",null,"Here we provide guidance for GitHub, GitLab, BitBucket Server, and Azure DevOps."),(0,r.kt)(k,{groupId:"git-provider",default:!0,mdxType:"Tabs"},(0,r.kt)(g,{value:"github",label:"GitHub",mdxType:"TabItem"},"GitHub requires no additional configuration for OAuth Git access"),(0,r.kt)(g,{value:"gitlab",label:"GitLab",mdxType:"TabItem"},(0,r.kt)("p",null,"Create a GitLab OAuth application that will request ",(0,r.kt)("inlineCode",{parentName:"p"},"api")," permissions to create pull requests on your behalf."),(0,r.kt)("p",null,"Follow the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.gitlab.com/ee/integration/oauth_provider.html"},"GitLab docs"),"."),(0,r.kt)("p",null,"The application should have at least these scopes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"api")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"openid")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"email")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"profile"))),(0,r.kt)("p",null,"Add callback URLs to the application for each address the UI will be exposed on, e.g.:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"https://localhost:8000/oauth/gitlab")," for port-forwarding and testing"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"https://git.example.com/oauth/gitlab")," for production use")),(0,r.kt)("p",null,"Save your application, taking note of the ",(0,r.kt)("strong",{parentName:"p"},"Client ID")," and ",(0,r.kt)("strong",{parentName:"p"},"Client Secret"),". Save\nthem into the ",(0,r.kt)("inlineCode",{parentName:"p"},"git-provider-credentials")," secret, along with:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GIT_HOST_TYPES")," to tell WGE that the host is gitlab"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GITLAB_HOSTNAME")," where the OAuth app is hosted")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Replace values")," in this snippet and run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl create secret generic git-provider-credentials --namespace=flux-system \\\n  --from-literal="GITLAB_CLIENT_ID=13457" \\\n  --from-literal="GITLAB_CLIENT_SECRET=24680" \\\n  --from-literal="GITLAB_HOSTNAME=git.example.com" \\\n  --from-literal="GIT_HOST_TYPES=git.example.com=gitlab"\n'))),(0,r.kt)(g,{value:"bitbucket-server",label:"BitBucket Server",mdxType:"TabItem"},(0,r.kt)("p",null,"Create a new ",(0,r.kt)("a",{parentName:"p",href:"https://confluence.atlassian.com/bitbucketserver/configure-an-incoming-link-1108483657.html"},"incoming application link")," from\nthe BitBucket administration dashboard. You will be asked to enter a unique name and the redirect URL for the external application. The redirect URL\nshould be set to ",(0,r.kt)("inlineCode",{parentName:"p"},"<WGE dashboard URL>/oauth/bitbucketserver"),". You will also need to select permissions for the application. The minimum set of\npermissions needed for WGE to create pull requests on behalf of users is ",(0,r.kt)("inlineCode",{parentName:"p"},"Repositories - Write"),". An example of configuring these settings is shown below."),(0,r.kt)("figure",null,(0,r.kt)("img",{src:l.Z,width:"500"}),(0,r.kt)("figcaption",null,"Configuring a new incoming application link")),(0,r.kt)("p",null,"Save your application and take note of the ",(0,r.kt)("strong",{parentName:"p"},"Client ID")," and ",(0,r.kt)("strong",{parentName:"p"},"Client Secret"),". Save\nthem into the ",(0,r.kt)("inlineCode",{parentName:"p"},"git-provider-credentials")," secret, along with:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GIT_HOST_TYPES")," to tell WGE that the host is bitbucket-server"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"BITBUCKET_SERVER_HOSTNAME")," where the OAuth app is hosted")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Replace values")," in this snippet and run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl create secret generic git-provider-credentials --namespace=flux-system \\\n  --from-literal="BITBUCKET_SERVER_CLIENT_ID=13457" \\\n  --from-literal="BITBUCKET_SERVER_CLIENT_SECRET=24680" \\\n  --from-literal="BITBUCKET_SERVER_HOSTNAME=git.example.com" \\\n  --from-literal="GIT_HOST_TYPES=git.example.com=bitbucket-server"\n')),(0,r.kt)("p",null,"If the secret is already present, use the following command to update it using your default editor:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl edit secret generic git-provider-credentials --namespace=flux-system\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If BitBucket Server is running on the default port (7990), make sure you include the port number in the values of the secret. For example: ",(0,r.kt)("inlineCode",{parentName:"p"},"GIT_HOST_TYPES=git.example.com:7990=bitbucket-server")))),(0,r.kt)(g,{value:"azure-devops",label:"Azure DevOps",mdxType:"TabItem"},(0,r.kt)("p",null,"Navigate to ",(0,r.kt)("a",{parentName:"p",href:"https://app.vsaex.visualstudio.com/app/register"},"VisualStudio")," and register a new application, as explained in the ",(0,r.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/azure/devops/integrate/get-started/authentication/oauth?view=azure-devops#1-register-your-app"},"docs"),". Set the authorization callback URL and select which scopes to grant. Set the callback URL to ",(0,r.kt)("inlineCode",{parentName:"p"},"<WGE dashboard URL>/oauth/azuredevops"),". "),(0,r.kt)("p",null,"Select the ",(0,r.kt)("inlineCode",{parentName:"p"},"Code (read and write)")," scope from the list. This is necessary so that WGE can create pull requests on behalf of users. An example of configuring these settings is shown below."),(0,r.kt)("figure",null,(0,r.kt)("img",{src:o.Z}),(0,r.kt)("figcaption",null,"Creating a new application")),(0,r.kt)("p",null,"After creating your application, you will be presented with the application settings. Take note of the ",(0,r.kt)("inlineCode",{parentName:"p"},"App ID")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Client Secret")," values\u2014you will use them to configure WGE."),(0,r.kt)("figure",null,(0,r.kt)("img",{src:s.Z}),(0,r.kt)("figcaption",null,"Application settings")),(0,r.kt)("p",null,"In your cluster, create a secret named ",(0,r.kt)("inlineCode",{parentName:"p"},"git-provider-credentials")," that contains the ",(0,r.kt)("inlineCode",{parentName:"p"},"App ID")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"Client Secret")," values from the newly created application."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Replace values")," in this snippet and run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl create secret generic git-provider-credentials --namespace=flux-system \\\n  --from-literal="AZURE_DEVOPS_CLIENT_ID=<App ID value>" \\\n  --from-literal="AZURE_DEVOPS_CLIENT_SECRET=<Client Secret value>"\n')),(0,r.kt)("p",null,"WGE is now configured to ask users for authorization the next time a pull request must be created as part of using a template. Note that each user can view and manage which applications they have authorized by navigating to ",(0,r.kt)("a",{parentName:"p",href:"https://app.vsaex.visualstudio.com/me"},"https://app.vsaex.visualstudio.com/me"),"."))),(0,r.kt)("h2",{id:"4-configure-your-password"},"4. Configure Your Password"),(0,r.kt)("p",null,"First, install the Weave GitOps Enterprise CLI tool. To do this, you can use either brew or curl."),(0,r.kt)(k,{groupId:"weave-gitops-cli",default:"homebrew",mdxType:"Tabs"},(0,r.kt)(g,{value:"homebrew",label:"Homebrew",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"brew install weaveworks/tap/gitops-ee\n"))),(0,r.kt)(g,{value:"curl",label:"curl",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'curl --silent --location "https://artifacts.wge.dev.weave.works/releases/bin/0.27.0/gitops-$(uname)-$(uname -m).tar.gz" | tar xz -C /tmp\nsudo mv /tmp/gitops /usr/local/bin\ngitops version\n')))),(0,r.kt)("p",null,"Now, to login to the WGE UI, generate a bcrypt hash for your chosen password and store it as a secret in the Kubernetes cluster. There are several different ways to generate a bcrypt hash. Here, we'll use ",(0,r.kt)("inlineCode",{parentName:"p"},"gitops get bcrypt-hash")," from our GitOps CLI."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'PASSWORD="<Make up and insert a brand-new password here>"\necho -n $PASSWORD | gitops get bcrypt-hash | kubectl create secret generic cluster-user-auth -n flux-system --from-literal=username=wego-admin --from-file=password=/dev/stdin\n')),(0,r.kt)("p",null,"A validation to know it\u2019s working:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get secret -n flux-system cluster-user-auth\n")),(0,r.kt)("h2",{id:"5-install-weave-gitops-enterprise-to-your-cluster"},"5. Install Weave GitOps Enterprise to Your Cluster"),(0,r.kt)("p",null,"First, you'll get taken to the Weaveworks portal on the Azure platform, which provides your subscription details."),(0,r.kt)("p",null,'Search for Weave GitOps. Pick "View private products" and choose WGE. Fill out the forms, selecting your cluster, then choose "Review and Create".'),(0,r.kt)("h2",{id:"6-apply-extra-configuration"},"6. Apply Extra Configuration"),(0,r.kt)("p",null,"Additional configuration is done through an optional ConfigMap:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cluster-service-extra-config\n  namespace: flux-system\ndata:\n  # disable TLS\nNO_TLS: "true"\n')),(0,r.kt)("p",null,"Apply the configuration with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl apply -f cluster-service-extra-config.yaml\n\n# restart the clusters-service for changes to take effect\nkubectl -n flux-system rollout restart deploy/weave-gitops-enterprise-mccp-cluster-service\n")),(0,r.kt)("h3",{id:"available-configuration-options"},"Available Configuration Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"value"),(0,r.kt)("th",{parentName:"tr",align:null},"default"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"NO_TLS")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"false"')),(0,r.kt)("td",{parentName:"tr",align:null},"disable TLS")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CLUSTER_NAME")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"management"')),(0,r.kt)("td",{parentName:"tr",align:null},"name of the management cluster")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"AUTH_METHODS")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"token-passthrough,user-account"')),(0,r.kt)("td",{parentName:"tr",align:null},"Which auth methods to use, valid values are 'oidc', 'token-pass-through' and 'user-account'")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"OIDC_ISSUER_URL")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"token-passthrough,user-account"')),(0,r.kt)("td",{parentName:"tr",align:null},"The URL of the OpenID Connect issuer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"OIDC_CLIENT_ID")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"token-passthrough,user-account"')),(0,r.kt)("td",{parentName:"tr",align:null},"The client ID for the OpenID Connect client")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"OIDC_CLIENT_SECRET")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"token-passthrough,user-account"')),(0,r.kt)("td",{parentName:"tr",align:null},"The client secret to use with OpenID Connect issuer")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"OIDC_REDIRECT_URL")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"token-passthrough,user-account"')),(0,r.kt)("td",{parentName:"tr",align:null},"The OAuth2 redirect URL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"OIDC_TOKEN_DURATION")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"1h"')),(0,r.kt)("td",{parentName:"tr",align:null},"The duration of the ID token. It should be set in the format: number + time unit (s,m,h) e.g., 20m")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"OIDC_CLAIM_USERNAME")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"email"')),(0,r.kt)("td",{parentName:"tr",align:null},"JWT claim to use as the user name. By default email, which is expected to be a unique identifier of the end user. Admins can choose other claims, such as sub or name, depending on their provider")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"OIDC_CLAIM_GROUPS")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"groups"')),(0,r.kt)("td",{parentName:"tr",align:null},"JWT claim to use as the user's group. If the claim is present it must be an array of strings")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CUSTOM_OIDC_SCOPES")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"groups, openid, email, profile"')),(0,r.kt)("td",{parentName:"tr",align:null},"Customise the requested scopes for then OIDC authentication flow - openid will always be requested")))),(0,r.kt)("h2",{id:"7-check-that-it-works"},"7. Check That It Works"),(0,r.kt)("p",null,'Go to the "services and ingresses" tab in the Azure portal and look for signs that the UI installed. '),(0,r.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,r.kt)("p",null,"WGE will try and automatically install Flux on a new cluster. If this fails for some reason, or if you need a custom Flux installation, you can manually install it before installing WGE."),(0,r.kt)("p",null,'Click "Next" and add:'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Source Kind: Git repository"),(0,r.kt)("li",{parentName:"ul"},"Repository URL: ","[your repository URL here]"),(0,r.kt)("li",{parentName:"ul"},"Reference Type: Branch"),(0,r.kt)("li",{parentName:"ul"},"Repository Type: Private")),(0,r.kt)("p",null,'And under the "Authentication" section:'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Authentication Source: Provide Authentication here"),(0,r.kt)("li",{parentName:"ul"},"SSH Key Authentication: Let the operator generate SSH Keys"),(0,r.kt)("li",{parentName:"ul"},"HTTPS User: YOUR_GITHUB_USERNAME"),(0,r.kt)("li",{parentName:"ul"},"HTTPS Key: YOUR_GITHUB_USER_PAT (Get one at ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/settings/tokens"},"this link"),". It's not the most secure method, but the easiest to get going.)")),(0,r.kt)("p",null,'Click "Next". You\'ll see an option to create a Kustomisation, which is optional. To create one:'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Click Create"),(0,r.kt)("li",{parentName:"ul"},"Instance name: flux-system"),(0,r.kt)("li",{parentName:"ul"},"Path: clusters/default/demo3-azure-flux"),(0,r.kt)("li",{parentName:"ul"},"Prune: Ticked")),(0,r.kt)("p",null,'Click "Save". Then clicking "Next", which will give you a summary so you can review your input. Then click "Create". It will take about five minutes to deploy.'),(0,r.kt)("p",null,'You\'ll get to a new screen, which at the top-right shows "Notifications" and will display creation of the Flux configuration. When your deployment succeeds, go to the resource and pin to your dashboard. Then go to your terminal to see if it works in kubectl. In the terminal you\'ll get the GitRepository and Kustomizations. You should then get a green "succeeded" checkmark.'),(0,r.kt)("p",null,"The Kustomisations screen does not provide an option to inspect the path/target namespace\u2014you have to supply the target Namespace in the Kustomization object."),(0,r.kt)("h2",{id:"next-steps"},"Next Steps"),(0,r.kt)("p",null,"From this point, you can follow our generalized WGE installation instructions to ",(0,r.kt)("a",{parentName:"p",href:"/docs/0.32.0/enterprise/getting-started/install-enterprise#tls-configuration"},"configure TLS")," and log into the UI. Installing the Azure Marketplace product installs the Helm chart."))}N.isMDXComponent=!0},3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(a),m=r,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return a?n.createElement(h,l(l({ref:t},u),{},{components:a})):n.createElement(h,l({ref:t},u))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},87585:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/oauth-azure-devops-success-4806f495e958a093e7e20df952e2026e.png"},17779:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/oauth-azure-devops-fedd005afed739e13a4a8bbd676c3928.png"},74354:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/oauth-bitbucket-dd2f409a75d5fa495765537b2c3f6f17.png"}}]);