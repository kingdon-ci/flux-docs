"use strict";(self.webpackChunkweave_gitops_docs=self.webpackChunkweave_gitops_docs||[]).push([[29223],{32254:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={title:"Dependency Management",hide_title:!0},i="Dependency Management",s={unversionedId:"terraform/using-terraform-cr/depends-on",id:"version-0.24.0/terraform/using-terraform-cr/depends-on",title:"Dependency Management",description:"TF-controller supports GitOps dependency management.  The GitOps dependency management feature",source:"@site/versioned_docs/version-0.24.0/terraform/using-terraform-cr/depends-on.mdx",sourceDirName:"terraform/using-terraform-cr",slug:"/terraform/using-terraform-cr/depends-on",permalink:"/docs/0.24.0/terraform/using-terraform-cr/depends-on",draft:!1,editUrl:"https://github.com/weaveworks/weave-gitops/edit/main/website/versioned_docs/version-0.24.0/terraform/using-terraform-cr/depends-on.mdx",tags:[],version:"0.24.0",frontMatter:{title:"Dependency Management",hide_title:!0},sidebar:"docs",previous:{title:"Configure Custom Backend",permalink:"/docs/0.24.0/terraform/using-terraform-cr/custom-backend"},next:{title:"Primitive Modules",permalink:"/docs/0.24.0/terraform/using-terraform-cr/modules"}},p={},c=[{value:"Create a Terraform object",id:"create-a-terraform-object",level:2}],l={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"dependency-management"},"Dependency Management"),(0,a.kt)("p",null,"TF-controller supports GitOps dependency management.  The GitOps dependency management feature\nis based on the Kustomization controller of Flux."),(0,a.kt)("p",null,"This means that you can use TF-controller to provision resources that depend on other resources at the GitOps level.\nFor example, you can use TF-controller to provision an S3 bucket, and then use TF-controller\nto provision another resource to configure ACL for that bucket."),(0,a.kt)("h2",{id:"create-a-terraform-object"},"Create a Terraform object"),(0,a.kt)("p",null,"Similar to the same feature in the Kustomization controller, the dependency management feature is enabled\nby setting the ",(0,a.kt)("inlineCode",{parentName:"p"},"dependsOn")," field in the ",(0,a.kt)("inlineCode",{parentName:"p"},"Terraform")," object. The ",(0,a.kt)("inlineCode",{parentName:"p"},"dependsOn")," field is a list of\n",(0,a.kt)("inlineCode",{parentName:"p"},"Terraform")," objects."),(0,a.kt)("p",null,"First, create a ",(0,a.kt)("inlineCode",{parentName:"p"},"Terraform")," object to provision the S3 bucket, name it ",(0,a.kt)("inlineCode",{parentName:"p"},"aws-s3-bucket"),".\nThe S3 bucket is provisioned by the Terraform module ",(0,a.kt)("inlineCode",{parentName:"p"},"aws_s3_bucket")," in the OCI image ",(0,a.kt)("inlineCode",{parentName:"p"},"aws-package-v4.33.0"),".\nIt is configured to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"auto-apply")," mode, and write outputs to the secret ",(0,a.kt)("inlineCode",{parentName:"p"},"aws-s3-bucket-outputs"),"."),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Expand to view"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{20-24}","{20-24}":!0},"---\napiVersion: infra.contrib.fluxcd.io/v1alpha1\nkind: Terraform\nmetadata:\n  name: aws-s3-bucket\n  namespace: flux-system\nspec:\n  path: aws_s3_bucket\n  values:\n    bucket: my-tf-controller-test-bucket\n    tags:\n      Environment: Dev\n      Name: My bucket\n  sourceRef:\n    kind: OCIRepository\n    name: aws-package-v4.33.0\n  approvePlan: auto\n  interval: 2m\n  destroyResourcesOnDeletion: true\n  writeOutputsToSecret:\n    name: aws-s3-bucket-outputs\n    outputs:\n    - arn\n    - bucket\n  runnerPodTemplate:\n    spec:\n      envFrom:\n      - secretRef:\n          name: aws-credentials\n"))),(0,a.kt)("p",null,"Second, create a ",(0,a.kt)("inlineCode",{parentName:"p"},"Terraform")," object to configure ACL for the S3 bucket, name it ",(0,a.kt)("inlineCode",{parentName:"p"},"aws-s3-bucket-acl"),".\nThe ACL is provisioned by the Terraform module ",(0,a.kt)("inlineCode",{parentName:"p"},"aws_s3_bucket_acl"),", also from the OCI image ",(0,a.kt)("inlineCode",{parentName:"p"},"aws-package-v4.33.0"),"."),(0,a.kt)("p",null,"In the ",(0,a.kt)("inlineCode",{parentName:"p"},"dependsOn")," field, specify the ",(0,a.kt)("inlineCode",{parentName:"p"},"Terraform")," object that provisions the S3 bucket.\nThis means that the ACL will be configured only after the S3 bucket is provisioned, and has its outputs Secret written.\nWe can read the outputs of the S3 bucket from the Secret ",(0,a.kt)("inlineCode",{parentName:"p"},"aws-s3-bucket-outputs"),", by specifying the ",(0,a.kt)("inlineCode",{parentName:"p"},"spec.readInputsFromSecrets")," field.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"spec.readInputsFromSecrets")," field is a list of Secret objects.\nIts ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," field is the name of the Secret, and its ",(0,a.kt)("inlineCode",{parentName:"p"},"as")," field is the name of variable that can be used in the ",(0,a.kt)("inlineCode",{parentName:"p"},"spec.values")," block."),(0,a.kt)("p",null,"For example, the ",(0,a.kt)("inlineCode",{parentName:"p"},"spec.values.bucket")," field in the ",(0,a.kt)("inlineCode",{parentName:"p"},"aws-s3-bucket-acl")," Terraform object is set to ",(0,a.kt)("inlineCode",{parentName:"p"},"${{ .aws_s3_bucket.bucket }}"),"."),(0,a.kt)("p",null,"Please note that we use ",(0,a.kt)("inlineCode",{parentName:"p"},"${{")," and  ",(0,a.kt)("inlineCode",{parentName:"p"},"}}")," as the delimiters for the variable name, instead of the Helm default ones, ",(0,a.kt)("inlineCode",{parentName:"p"},"{{")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"}}"),"."),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Expand to view"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",18:!0,className:"language-yaml",metastring:'hl_lines="11 18 20-21"',hl_lines:'"11','20-21"':!0},"---\napiVersion: infra.contrib.fluxcd.io/v1alpha1\nkind: Terraform\nmetadata:\n  name: aws-s3-bucket-acl\n  namespace: flux-system\nspec:\n  path: aws_s3_bucket_acl\n  values:\n    acl: private\n    bucket: ${{ .aws_s3_bucket.bucket }}\n  sourceRef:\n    kind: OCIRepository\n    name: aws-package-v4.33.0\n  approvePlan: auto\n  interval: 3m\n  dependsOn:\n  - name: aws-s3-bucket\n  readInputsFromSecrets:\n  - name: aws-s3-bucket-outputs\n    as: aws_s3_bucket\n  runnerPodTemplate:\n    spec:\n      envFrom:\n      - secretRef:\n          name: aws-credentials\n"))))}u.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(f,i(i({ref:t},l),{},{components:n})):r.createElement(f,i({ref:t},l))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);