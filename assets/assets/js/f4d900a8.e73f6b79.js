"use strict";(self.webpackChunkweave_gitops_docs=self.webpackChunkweave_gitops_docs||[]).push([[79221],{72503:(e,t,a)=>{a.d(t,{Z:()=>r});var n=a(67294),l=a(88746);a(52426);const i={fontSize:16,marginLeft:4,fontVariant:"all-small-caps"};function r(e){let{tiers:t}=e;return n.createElement(l.Z,{title:`This feature is a available on ${t}.`,style:i},t)}},93197:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>N,contentTitle:()=>v,default:()=>C,frontMatter:()=>f,metadata:()=>b,toc:()=>w});var n=a(87462),l=a(67294),i=a(3905),r=a(71125),o=a(32342),s=a(72503),p=a(77823),u=a(19666);function c(e){let{localPath:t,hostedPath:a,content:n}=e;return l.createElement(l.Fragment,null,l.createElement(u.Z,null,(()=>l.createElement(p.Z,{className:"language-bash"},"curl -o ",t," ",window.location.protocol,"//",window.location.host,a))),l.createElement(p.Z,{title:t,className:"language-yaml"},n))}var d=a(74354),m=a(17779),h=a(87585),g=a(65719);const k=a.p+"assets/files/example-enterprise-helm-3f50daa0331ddf234601bcf6985f5b37.yaml",f={title:"Weave GitOps Enterprise",hide_title:!0,pagination_next:"getting-started/ui"},v=void 0,b={unversionedId:"installation/weave-gitops-enterprise/index",id:"version-0.22.0/installation/weave-gitops-enterprise/index",title:"Weave GitOps Enterprise",description:"Installing Weave GitOps Enterprise",source:"@site/versioned_docs/version-0.22.0/installation/weave-gitops-enterprise/index.mdx",sourceDirName:"installation/weave-gitops-enterprise",slug:"/installation/weave-gitops-enterprise/",permalink:"/docs/0.22.0/installation/weave-gitops-enterprise/",draft:!1,editUrl:"https://github.com/weaveworks/weave-gitops/edit/main/website/versioned_docs/version-0.22.0/installation/weave-gitops-enterprise/index.mdx",tags:[],version:"0.22.0",frontMatter:{title:"Weave GitOps Enterprise",hide_title:!0,pagination_next:"getting-started/ui"},sidebar:"docs",previous:{title:"Weave GitOps OSS",permalink:"/docs/0.22.0/installation/weave-gitops"},next:{title:"1. Explore the GitOps UI",permalink:"/docs/0.22.0/getting-started/ui"}},N={},w=[{value:'Installing Weave GitOps Enterprise<TierLabel tiers="Enterprise" />',id:"installing-weave-gitops-enterprise",level:2},{value:"1. Set up a Management Cluster with <code>flux</code>",id:"1-set-up-a-management-cluster-with-flux",level:3},{value:"1.1 We start with creating a kind-config.",id:"11-we-start-with-creating-a-kind-config",level:5},{value:"1.2 Start your kind cluster using the configuration above and Kubernetes v1.23.6",id:"12-start-your-kind-cluster-using-the-configuration-above-and-kubernetes-v1236",level:5},{value:"1.1 Prepare IAM for installation",id:"11-prepare-iam-for-installation",level:5},{value:"1.2 Create the cluster",id:"12-create-the-cluster",level:5},{value:"1.3 Add cluster to kubeconfig",id:"13-add-cluster-to-kubeconfig",level:5},{value:"Install Flux onto your cluster with the <code>flux bootstrap</code> command.",id:"install-flux-onto-your-cluster-with-the-flux-bootstrap-command",level:5},{value:"2. Install a CAPI provider",id:"2-install-a-capi-provider",level:3},{value:"3. Apply the entitlements secret",id:"3-apply-the-entitlements-secret",level:3},{value:"4. Configure access for writing to git from the UI",id:"4-configure-access-for-writing-to-git-from-the-ui",level:3},{value:"5. Configure and commit",id:"5-configure-and-commit",level:3},{value:"<code>values.config.capi.repositoryURL</code>",id:"valuesconfigcapirepositoryurl",level:4},{value:"<code>values.config.capi.repositoryPath</code>",id:"valuesconfigcapirepositorypath",level:4},{value:"<code>values.config.capi.repositoryClustersPath</code>",id:"valuesconfigcapirepositoryclusterspath",level:4},{value:"(Optional) Install policy agent",id:"optional-install-policy-agent",level:4},{value:"6. Configure password",id:"6-configure-password",level:3},{value:"7. Install the CLI",id:"7-install-the-cli",level:3},{value:"Next steps",id:"next-steps",level:2},{value:"(Optional) Install the TF-Controller",id:"optional-install-the-tf-controller",level:3}],y={toc:w};function C(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"installing-weave-gitops-enterprise"},"Installing Weave GitOps Enterprise",(0,i.kt)(s.Z,{tiers:"Enterprise",mdxType:"TierLabel"})),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"To purchase entitlement to Weave GitOps Enterprise Edition please contact ",(0,i.kt)("a",{parentName:"p",href:"mailto:sales@weave.works"},"sales@weave.works")),(0,i.kt)("p",{parentName:"admonition"},"For more information about Weave GitOps Enterprise Edition, see the ",(0,i.kt)("a",{parentName:"p",href:"/docs/0.22.0/intro-ee"},"Enterprise feature page"),".")),(0,i.kt)("p",null,"Follow the instructions on this page to:"),(0,i.kt)(g.Z,{toc:(()=>{const e=w.slice(w.findIndex((e=>"installing-weave-gitops-enterprise"==e.id))+1);return e.slice(0,e.findIndex((e=>"2"==e.level)))})(),mdxType:"TOCInline"}),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"There is no need to install Weave GitOps (OSS) before installing Weave GitOps Enterprise")),(0,i.kt)("h3",{id:"1-set-up-a-management-cluster-with-flux"},"1. Set up a Management Cluster with ",(0,i.kt)("inlineCode",{parentName:"h3"},"flux")),(0,i.kt)("p",null,"To get you started in this document we'll cover:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"kind")," as our management cluster with the ",(0,i.kt)("em",{parentName:"li"},"CAPD")," provider"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"EKS")," as our management cluster with the ",(0,i.kt)("em",{parentName:"li"},"CAPA")," provider")),(0,i.kt)("p",null,"However Weave GitOps Enterprise supports any combination of management cluster and CAPI provider."),(0,i.kt)(r.Z,{groupId:"infrastructure",default:!0,mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"kind",label:"kind",mdxType:"TabItem"},(0,i.kt)("h5",{id:"11-we-start-with-creating-a-kind-config"},"1.1 We start with creating a kind-config."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="kind-config.yaml"',title:'"kind-config.yaml"'},"kind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n  - role: control-plane\n    extraMounts:\n      - hostPath: /var/run/docker.sock\n        containerPath: /var/run/docker.sock\n")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"extraMounts")," are for the Docker CAPI provider (CAPD) to be able to talk to the host docker"),(0,i.kt)("h5",{id:"12-start-your-kind-cluster-using-the-configuration-above-and-kubernetes-v1236"},"1.2 Start your kind cluster using the configuration above and Kubernetes v1.23.6"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kind create cluster --config kind-config.yaml --image=kindest/node:v1.23.6\n"))),(0,i.kt)(o.Z,{value:"eks",label:"EKS",mdxType:"TabItem"},(0,i.kt)("h5",{id:"11-prepare-iam-for-installation"},"1.1 Prepare IAM for installation"),(0,i.kt)("p",null,"The Cluster API needs special permissions in AWS. Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"clusterawsadm")," command below to roll out a CloudStack to installs the permissions into your AWS account. While the CloudStack is bound to a region, the resulting permissions are globally scoped. You can use any AWS Region that you have access to. The ",(0,i.kt)("inlineCode",{parentName:"p"},"clusterawsadm")," command takes an AWSIAMConfiguration file. We have provided a working example for you :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="eks-config.yaml"',title:'"eks-config.yaml"'},"apiVersion: bootstrap.aws.infrastructure.cluster.x-k8s.io/v1beta1\nkind: AWSIAMConfiguration\nspec:\n  bootstrapUser:\n    enable: true\n  eks:\n    iamRoleCreation: false # Set to true if you plan to use the EKSEnableIAM feature flag to enable automatic creation of IAM roles\n    defaultControlPlaneRole:\n      disable: false # Set to false to enable creation of the default control plane role\n    managedMachinePool:\n      disable: false # Set to false to enable creation of the default node pool role\n")),(0,i.kt)("p",null,"Run ",(0,i.kt)("inlineCode",{parentName:"p"},"clusterawsadm")," command to create the IAM group."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"$ clusterawsadm bootstrap iam create-cloudformation-stack --config eks-config.yaml --region $REGION\n")),(0,i.kt)("p",null,"Create an IAM User. This user will be used as a kind of service account. Assign the newly created group to this user. The group name will be something like: ",(0,i.kt)("inlineCode",{parentName:"p"},"cluster-api-provider-aws-s-AWSIAMGroupBootstrapper-XXXX"),". Create a secret for the newly created IAM user."),(0,i.kt)("h5",{id:"12-create-the-cluster"},"1.2 Create the cluster"),(0,i.kt)("p",null,"In testing we used the following values\n",(0,i.kt)("inlineCode",{parentName:"p"},"$INSTANCESIZE")," : t3.large\n",(0,i.kt)("inlineCode",{parentName:"p"},"$NUMOFNODES")," : 2\n",(0,i.kt)("inlineCode",{parentName:"p"},"$MINNODES")," : 2\n",(0,i.kt)("inlineCode",{parentName:"p"},"$MAXNODES")," : 6"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'eksctl create cluster -n "$CLUSTERNAME" -r "$REGION" --nodegroup-name workers -t $INSTANCESIZE --nodes $NUMOFNODES --nodes-min $MINNODES --nodes-max $MAXNODES --ssh-access --alb-ingress-access\n')),(0,i.kt)("h5",{id:"13-add-cluster-to-kubeconfig"},"1.3 Add cluster to kubeconfig"),(0,i.kt)("p",null,"Once the cluster is created, add the cluster to your ",(0,i.kt)("inlineCode",{parentName:"p"},"kubeconfig")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'aws eks --region "$REGION" update-kubeconfig --name "$CLUSTERNAME"\n')))),(0,i.kt)("h5",{id:"install-flux-onto-your-cluster-with-the-flux-bootstrap-command"},"Install Flux onto your cluster with the ",(0,i.kt)("inlineCode",{parentName:"h5"},"flux bootstrap")," command."),(0,i.kt)(r.Z,{groupId:"infrastructure",default:!0,mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"github",label:"GITHUB",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"flux bootstrap github \\\n  --owner=<github username> \\\n  --repository=fleet-infra \\\n  --branch=main \\\n  --path=./clusters/management \\\n  --personal\n"))),(0,i.kt)(o.Z,{value:"gitlab",label:"GITLAB",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"flux bootstrap gitlab \\\n  --owner=<gitlab username> \\\n  --repository=fleet-infra \\\n  --branch=main \\\n  --path=./clusters/management \\\n  --personal\n")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"owner"),"      - The username (or organization) of the git repository"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"repository")," - Git repository name"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"branch"),'     - Git branch (default "main")'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"path"),"       - path relative to the repository root, when specified the cluster sync will be scoped to this path"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"personal"),"   -  if set, the owner is assumed to be a repo user")),(0,i.kt)("p",null,"More information about ",(0,i.kt)("inlineCode",{parentName:"p"},"flux")," and the ",(0,i.kt)("inlineCode",{parentName:"p"},"flux bootstrap")," command can be found ",(0,i.kt)("a",{parentName:"p",href:"https://fluxcd.io/docs/cmd/"},"here")),(0,i.kt)("admonition",{title:"At this point a few things have occurred:",type:"note"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},"Your Flux management cluster is now running"),(0,i.kt)("li",{parentName:"ul"},"A new git repo was created based on the parameters you set in the ",(0,i.kt)("inlineCode",{parentName:"li"},"flux bootstrap")," command. Take a look at your repositories."))),(0,i.kt)("h3",{id:"2-install-a-capi-provider"},"2. Install a CAPI provider"),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("mdxAdmonitionTitle",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"mdxAdmonitionTitle"},"clusterctl")," versions"),(0,i.kt)("p",{parentName:"admonition"},"The example templates provided in this guide have been tested with ",(0,i.kt)("inlineCode",{parentName:"p"},"clusterctl")," version ",(0,i.kt)("inlineCode",{parentName:"p"},"1.1.3"),". However you might need to use an older or newer version depending on the capi-providers you plan on using."),(0,i.kt)("p",{parentName:"admonition"},"Download a specific version of clusterctl from the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/kubernetes-sigs/cluster-api/releases"},"releases page"),".")),(0,i.kt)("p",null,"In order to be able to provision Kubernetes clusters, a CAPI provider needs to be installed. See ",(0,i.kt)("a",{parentName:"p",href:"/docs/0.22.0/cluster-management/cluster-api-providers"},"Cluster API Providers")," page for more details on providers.\nHere we'll continue with our example instructions for CAPD and CAPA."),(0,i.kt)(r.Z,{groupId:"infrastructure",default:!0,mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"kind",label:"CAPD (kind)",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# Enable support for `ClusterResourceSet`s for automatically installing CNIs\nexport EXP_CLUSTER_RESOURCE_SET=true\n\nclusterctl init --infrastructure docker\n"))),(0,i.kt)(o.Z,{value:"eks",label:"CAPA (EKS)",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"export EXP_EKS=true\nexport EXP_MACHINE_POOL=true\nexport CAPA_EKS_IAM=true\nexport EXP_CLUSTER_RESOURCE_SET=true\n\nclusterctl init --infrastructure aws\n")))),(0,i.kt)("h3",{id:"3-apply-the-entitlements-secret"},"3. Apply the entitlements secret"),(0,i.kt)("p",null,"Contact ",(0,i.kt)("a",{parentName:"p",href:"mailto:sales@weave.works"},"sales@weave.works")," for a valid entitlements secret. Then apply it to the cluster:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f entitlements.yaml\n")),(0,i.kt)("h3",{id:"4-configure-access-for-writing-to-git-from-the-ui"},"4. Configure access for writing to git from the UI"),(0,i.kt)(r.Z,{groupId:"git-provider",default:!0,mdxType:"Tabs"},(0,i.kt)(o.Z,{value:"github",label:"GitHub",mdxType:"TabItem"},"GitHub requires no additional configuration for OAuth git access"),(0,i.kt)(o.Z,{value:"gitlab",label:"GitLab",mdxType:"TabItem"},(0,i.kt)("p",null,"Create a GitLab OAuth Application that will request ",(0,i.kt)("inlineCode",{parentName:"p"},"api")," permissions to create pull requests on the user's behalf.\nFollow the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.gitlab.com/ee/integration/oauth_provider.html"},"GitLab docs"),"."),(0,i.kt)("p",null,"The application should have at least these scopes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"api")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"openid")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"email")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"profile"))),(0,i.kt)("p",null,"Add callback URLs to the application for each address the UI will be exposed on, e.g.:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"https://localhost:8000/oauth/gitlab")," For port-forwarding and testing"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"https://git.example.com/oauth/gitlab")," For production use")),(0,i.kt)("p",null,"Save your application and take note of the ",(0,i.kt)("strong",{parentName:"p"},"Client ID")," and ",(0,i.kt)("strong",{parentName:"p"},"Client Secret")," and save\nthem into the ",(0,i.kt)("inlineCode",{parentName:"p"},"git-provider-credentials")," secret along with:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"GIT_HOST_TYPES")," to tell WGE that the host is gitlab"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"GITLAB_HOSTNAME")," where the OAuth app is hosted")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Replace values")," in this snippet and run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl create secret generic git-provider-credentials --namespace=flux-system \\\n  --from-literal="GITLAB_CLIENT_ID=13457" \\\n  --from-literal="GITLAB_CLIENT_SECRET=24680" \\\n  --from-literal="GITLAB_HOSTNAME=git.example.com" \\\n  --from-literal="GIT_HOST_TYPES=git.example.com=gitlab"\n'))),(0,i.kt)(o.Z,{value:"bitbucket-server",label:"BitBucket Server",mdxType:"TabItem"},(0,i.kt)("p",null,"Create a new ",(0,i.kt)("a",{parentName:"p",href:"https://confluence.atlassian.com/bitbucketserver/configure-an-incoming-link-1108483657.html"},"incoming application link")," from\nthe BitBucket administration dashboard. You will be asked to enter a unique name and the redirect URL for the external application. The redirect URL\nshould be set to ",(0,i.kt)("inlineCode",{parentName:"p"},"<WGE dashboard URL>/oauth/bitbucketserver"),". You will also need to select permissions for the application. The minimum set of\npermissions needed for WGE to create pull requests on behalf of users is ",(0,i.kt)("inlineCode",{parentName:"p"},"Repositories - Write"),". An example of configuring these settings is shown below."),(0,i.kt)("figure",null,(0,i.kt)("img",{src:d.Z,width:"500"}),(0,i.kt)("figcaption",null,"Configuring a new incoming application link")),(0,i.kt)("p",null,"Save your application and take note of the ",(0,i.kt)("strong",{parentName:"p"},"Client ID")," and ",(0,i.kt)("strong",{parentName:"p"},"Client Secret")," and save\nthem into the ",(0,i.kt)("inlineCode",{parentName:"p"},"git-provider-credentials")," secret along with:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"GIT_HOST_TYPES")," to tell WGE that the host is bitbucket-server"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"BITBUCKET_SERVER_HOSTNAME")," where the OAuth app is hosted")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Replace values")," in this snippet and run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl create secret generic git-provider-credentials --namespace=flux-system \\\n  --from-literal="BITBUCKET_SERVER_CLIENT_ID=13457" \\\n  --from-literal="BITBUCKET_SERVER_CLIENT_SECRET=24680" \\\n  --from-literal="BITBUCKET_SERVER_HOSTNAME=git.example.com" \\\n  --from-literal="GIT_HOST_TYPES=git.example.com=bitbucket-server"\n')),(0,i.kt)("p",null,"If the secret is already present, use the following command to update it using your default editor:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl edit secret generic git-provider-credentials --namespace=flux-system\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"If BitBucket Server is running on the default port (7990), make sure you include the port number in the values of the secret, for example: ",(0,i.kt)("inlineCode",{parentName:"p"},"GIT_HOST_TYPES=git.example.com:7990=bitbucket-server")))),(0,i.kt)(o.Z,{value:"azure-devops",label:"Azure DevOps",mdxType:"TabItem"},(0,i.kt)("p",null,"Navigate to ",(0,i.kt)("a",{parentName:"p",href:"https://app.vsaex.visualstudio.com/app/register"},"https://app.vsaex.visualstudio.com/app/register")," and register a new application, as explained in the ",(0,i.kt)("a",{parentName:"p",href:"https://learn.microsoft.com/en-us/azure/devops/integrate/get-started/authentication/oauth?view=azure-devops#1-register-your-app"},"docs"),". You will be asked to set the authorization callback URL as well as select which scopes to grant. The callback URL should be set to ",(0,i.kt)("inlineCode",{parentName:"p"},"<WGE dashboard URL>/oauth/azuredevops"),". You will also need to select the ",(0,i.kt)("inlineCode",{parentName:"p"},"Code (read and write)")," scope from the list as this is needed for WGE to be able to create pull requests on behalf of users. An example of configuring these settings is shown below."),(0,i.kt)("figure",null,(0,i.kt)("img",{src:m.Z}),(0,i.kt)("figcaption",null,"Creating a new application")),(0,i.kt)("p",null,"After creating your application, you will be presented with the application settings. Take note of the ",(0,i.kt)("inlineCode",{parentName:"p"},"App ID")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Client Secret")," values as you will use them to configure WGE."),(0,i.kt)("figure",null,(0,i.kt)("img",{src:h.Z}),(0,i.kt)("figcaption",null,"Application settings")),(0,i.kt)("p",null,"In your cluster, create a secret named ",(0,i.kt)("inlineCode",{parentName:"p"},"git-provider-credentials")," that contains the ",(0,i.kt)("inlineCode",{parentName:"p"},"App ID")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Client Secret")," values from the newly created application."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Replace values")," in this snippet and run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'kubectl create secret generic git-provider-credentials --namespace=flux-system \\\n  --from-literal="AZURE_DEVOPS_CLIENT_ID=<App ID value>" \\\n  --from-literal="AZURE_DEVOPS_CLIENT_SECRET=<Client Secret value>"\n')),(0,i.kt)("p",null,"WGE is now configured to ask users for authorization the next time a pull request needs to be created as part of using a template. Note that each user can view and manage which applications they have authorized by navigating to ",(0,i.kt)("a",{parentName:"p",href:"https://app.vsaex.visualstudio.com/me"},"https://app.vsaex.visualstudio.com/me"),"."))),(0,i.kt)("h3",{id:"5-configure-and-commit"},"5. Configure and commit"),(0,i.kt)("p",null,"We deploy WGE via a Helm chart. We'll save and adapt the below template, before committing it to git to a flux-reconciled path."),(0,i.kt)("p",null,"Clone the newly created repo locally as we're gonna add some things!"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"git clone git@<provider>:<username>/fleet-infra\ncd fleet-infra\n")),(0,i.kt)("p",null,"Download the helm-release to ",(0,i.kt)("inlineCode",{parentName:"p"},"clusters/management/weave-gitops-enterprise.yaml"),"."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Expand to see file contents"),(0,i.kt)(c,{localPath:"clusters/management/weave-gitops-enterprise.yaml",hostedPath:k,content:"apiVersion: source.toolkit.fluxcd.io/v1beta2\nkind: HelmRepository\nmetadata:\n  name: weave-gitops-enterprise-charts\n  namespace: flux-system\nspec:\n  interval: 60m\n  secretRef:\n    name: weave-gitops-enterprise-credentials\n  url: https://charts.dev.wkp.weave.works/releases/charts-v3\n---\napiVersion: helm.toolkit.fluxcd.io/v2beta1\nkind: HelmRelease\nmetadata:\n  name: weave-gitops-enterprise\n  namespace: flux-system\nspec:\n  chart:\n    spec:\n      interval: 65m\n      chart: mccp\n      sourceRef:\n        kind: HelmRepository\n        name: weave-gitops-enterprise-charts\n        namespace: flux-system\n      version: 0.22.0\n  install:\n    crds: CreateReplace\n  upgrade:\n    crds: CreateReplace\n  interval: 50m\n  values:\n    # -- Configure TLS settings if needed\n    # tls:\n      # -- Can be disabled if TLS is handled by a user-provided ingress controller\n      # enabled: true\n      # -- optionally specify a TLS secret\n      # secretName: null\n    config:\n      capi:\n        repositoryURL: https://github.com/$GITHUB_USER/fleet-infra\n        # -- Can be changed depending on your git repo structure\n        # repositoryPath: ./clusters/management/clusters\n        # repositoryClustersPath: ./cluster\n      git:\n        type: github\n        # -- Change if using on-prem github/gitlab\n        # hostname: https://github.com\n",mdxType:"CurlCodeBlock"})),(0,i.kt)("p",null,"Once you have copied the above file, open and adjust the following configuration\noptions:"),(0,i.kt)("h4",{id:"valuesconfigcapirepositoryurl"},(0,i.kt)("inlineCode",{parentName:"h4"},"values.config.capi.repositoryURL")),(0,i.kt)("p",null,"Ensure this has been set to your repository URL."),(0,i.kt)("h4",{id:"valuesconfigcapirepositorypath"},(0,i.kt)("inlineCode",{parentName:"h4"},"values.config.capi.repositoryPath")),(0,i.kt)("p",null,"By default, WGE will create new clusters in the ",(0,i.kt)("inlineCode",{parentName:"p"},"clusters/management/clusters")," path.\nThis can be configured with ",(0,i.kt)("inlineCode",{parentName:"p"},"values.config.capi.repositoryPath"),".\nFor example you might what to change it to ",(0,i.kt)("inlineCode",{parentName:"p"},"clusters/my-cluster/cluster")," if you configured flux to reconcile ",(0,i.kt)("inlineCode",{parentName:"p"},"./clusters/my-cluster")," instead."),(0,i.kt)("h4",{id:"valuesconfigcapirepositoryclusterspath"},(0,i.kt)("inlineCode",{parentName:"h4"},"values.config.capi.repositoryClustersPath")),(0,i.kt)("p",null,"The other important path to configure is where applications and workloads that will be run on the new cluster will be stored.\nBy default this is ",(0,i.kt)("inlineCode",{parentName:"p"},"./clusters"),". When a new cluster is specified any profiles that have been selected will be written to ",(0,i.kt)("inlineCode",{parentName:"p"},"./clusters/{.namespace}/{.clusterName}/profiles.yaml"),".\nWhen the new cluster is bootstrapped, flux will be sync the ",(0,i.kt)("inlineCode",{parentName:"p"},"./clusters/{.namespace}/{.clusterName}")," path."),(0,i.kt)("h4",{id:"optional-install-policy-agent"},"(Optional) Install policy agent"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/0.22.0/policy/intro"},"Policy agent")," comes packaged with the WGE chart. To install it you need to set the following values:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"values.policy-agent.enabled"),": set to true to install the agent with WGE"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"values.policy-agent.config.accountId"),": organization name, used as identifier"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"values.policy-agent.config.clusterId"),": unique identifier for the cluster")),(0,i.kt)("p",null,"Commit and push all the files"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'git add clusters/management/weave-gitops-enterprise.yaml\ngit commit -m "Deploy Weave GitOps Enterprise"\ngit push\n')),(0,i.kt)("p",null,"Flux will reconcile the helm-release and WGE will be deployed into the cluster. You can check the ",(0,i.kt)("inlineCode",{parentName:"p"},"flux-system")," namespace to verify all pods are running."),(0,i.kt)("h3",{id:"6-configure-password"},"6. Configure password"),(0,i.kt)("p",null,"In order to login to the WGE UI, you need to generate a bcrypt hash for your chosen password and store it as a secret in the Kubernetes cluster."),(0,i.kt)("p",null,"There are several different ways to generate a bcrypt hash, this guide uses ",(0,i.kt)("inlineCode",{parentName:"p"},"gitops get bcrypt-hash")," from our CLI, which can be installed by following\nthe instructions ",(0,i.kt)("a",{parentName:"p",href:"#gitops-cli"},"here"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'PASSWORD="<your password>"\necho -n $PASSWORD | gitops get bcrypt-hash\n$2a$10$OS5NJmPNEb13UgTOSKnMxOWlmS7mlxX77hv4yAiISvZ71Dc7IuN3q\n')),(0,i.kt)("p",null,"Use the hashed output to create a Kubernetes username/password secret."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create secret generic cluster-user-auth \\\n  --namespace flux-system \\\n  --from-literal=username=wego-admin \\\n  --from-literal=password='$2a$.......'\n")),(0,i.kt)("h3",{id:"7-install-the-cli"},"7. Install the CLI"),(0,i.kt)("p",null,"Install the Weave GitOps Enterprise CLI tool.\nYou can use brew or curl"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"brew install weaveworks/tap/gitops-ee\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"curl --silent --location \"https://artifacts.wge.dev.weave.works/releases/bin/0.22.0/gitops-$(uname | tr '[:upper:]' '[:lower:]')-$(uname -m).tar.gz\" | tar xz -C /tmp\nsudo mv /tmp/gitops /usr/local/bin\ngitops version\n")),(0,i.kt)("h2",{id:"next-steps"},"Next steps"),(0,i.kt)("p",null,"In our following ",(0,i.kt)("a",{parentName:"p",href:"/docs/0.22.0/getting-started/ui"},"Get Started document"),", we will walk you through logging into the GitOps Dashboard and deploying an application."),(0,i.kt)("p",null,"Then you can head over to either:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/0.22.0/cluster-management/getting-started"},"Cluster Management - Getting started")," to create your first CAPI Cluster with ",(0,i.kt)("inlineCode",{parentName:"li"},"kind"),"/CAPD"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/docs/0.22.0/guides/deploying-capa"},"Deploying CAPA with EKS")," to create your first CAPI Cluster with EKS/CAPA.")),(0,i.kt)("h3",{id:"optional-install-the-tf-controller"},"(Optional) Install the TF-Controller"),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"https://weaveworks.github.io/tf-controller/"},"TF-Controller")," is a controller for Flux to reconcile Terraform resources in a GitOps way."),(0,i.kt)("p",null,"With Flux and the TF-Controller, Weave GitOps Enterprise makes it easy to add Terraform templates to clusters and continuously reconcile any changes made to the Terraform source manifest."),(0,i.kt)("p",null,"Check out our guide on how to ",(0,i.kt)("a",{parentName:"p",href:"/docs/0.22.0/guides/using-terraform-templates"},"use Terraform templates"),", and why not try your hands at using it with the RDS example!"),(0,i.kt)("p",null,"Install the TF-Controller to a cluster using Helm:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-console"},"# Add tf-controller helm repository\nhelm repo add tf-controller https://weaveworks.github.io/tf-controller/\n\n# Install tf-controller\nhelm upgrade -i tf-controller tf-controller/tf-controller \\\n    --namespace flux-system\n")),(0,i.kt)("p",null,"Consult the TF-Controller ",(0,i.kt)("a",{parentName:"p",href:"https://weaveworks.github.io/tf-controller/getting_started/"},"Installation")," documentation for more details on which parameters are configurable and how to install a specific version."))}C.isMDXComponent=!0},87585:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/oauth-azure-devops-success-4806f495e958a093e7e20df952e2026e.png"},17779:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/oauth-azure-devops-fedd005afed739e13a4a8bbd676c3928.png"},74354:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/oauth-bitbucket-dd2f409a75d5fa495765537b2c3f6f17.png"}}]);