"use strict";(self.webpackChunkweave_gitops_docs=self.webpackChunkweave_gitops_docs||[]).push([[35586],{862:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(67294),r=n(88746);n(52426);const s={fontSize:16,marginLeft:4,fontVariant:"all-small-caps"};function o(e){let{tiers:t}=e;return a.createElement(r.Z,{title:`This feature is a available on ${t}.`,style:s},t)}},97897:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var a=n(87462),r=(n(67294),n(3905)),s=n(862);const o={title:"Features",hide_title:!0},i='Features <TierLabel tiers="enterprise" />',l={unversionedId:"gitopssets/features",id:"version-0.19.0/gitopssets/features",title:"Features",description:"Guide",source:"@site/versioned_docs/version-0.19.0/gitopssets/features.mdx",sourceDirName:"gitopssets",slug:"/gitopssets/features",permalink:"/docs/0.19.0/gitopssets/features",draft:!1,editUrl:"https://github.com/weaveworks/weave-gitops/edit/main/website/versioned_docs/version-0.19.0/gitopssets/features.mdx",tags:[],version:"0.19.0",frontMatter:{title:"Features",hide_title:!0},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/0.19.0/gitopssets/intro"},next:{title:"List generator",permalink:"/docs/0.19.0/gitopssets/list-generator"}},p={},m=[{value:"Guide",id:"guide",level:2},{value:"Generation",id:"generation",level:2},{value:"Rendering templates",id:"rendering-templates",level:2},{value:"Repeating templates",id:"repeating-templates",level:2}],d={toc:m};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"features-"},"Features ",(0,r.kt)(s.Z,{tiers:"enterprise",mdxType:"TierLabel"})),(0,r.kt)("h2",{id:"guide"},"Guide"),(0,r.kt)("p",null,"Currently rendering templates operates in two phases:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Generate all template parameters from the configured generators"),(0,r.kt)("li",{parentName:"ul"},"Render all the templates for each set of template parameters")),(0,r.kt)("p",null,"Please read the ",(0,r.kt)("a",{parentName:"p",href:"../intro#security"},"security information")," below before using this."),(0,r.kt)("h2",{id:"generation"},"Generation"),(0,r.kt)("p",null,"The simplest generator is the ",(0,r.kt)("inlineCode",{parentName:"p"},"list")," generator."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: templates.weave.works/v1alpha1\nkind: GitOpsSet\nmetadata:\n  name: gitopsset-sample\nspec:\n  generators:\n    - list:\n        elements:\n          - env: dev\n            team: dev-team\n          - env: production\n            team: ops-team\n          - env: staging\n            team: ops-team\n")),(0,r.kt)("p",null,"The elements in there are a set JSON of objects",(0,r.kt)("sup",{parentName:"p",id:"fnref-yaml"},(0,r.kt)("a",{parentName:"sup",href:"#fn-yaml",className:"footnote-ref"},"yaml")),", there are three in this example, and each of them has two keys, ",(0,r.kt)("inlineCode",{parentName:"p"},"env")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"team"),"."),(0,r.kt)("p",null,"Other generators provide different sets of keys and values."),(0,r.kt)("p",null,"The generators documentation below provides more information on what the other generators output."),(0,r.kt)("h2",{id:"rendering-templates"},"Rendering templates"),(0,r.kt)("p",null,"Templates are Kubernetes resources in YAML format."),(0,r.kt)("p",null,"Each template is rendered for each element generated by the generators."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: templates.weave.works/v1alpha1\nkind: GitOpsSet\nmetadata:\n  name: gitopsset-sample\nspec:\n  generators:\n    - list:\n        elements:\n          - env: dev\n            team: dev-team\n          - env: production\n            team: ops-team\n          - env: staging\n            team: ops-team\n  templates:\n    - content:\n        kind: Kustomization\n        apiVersion: kustomize.toolkit.fluxcd.io/v1beta2\n        metadata:\n          name: "{{ .Element.env }}-demo"\n          labels:\n            app.kubernetes.io/name: go-demo\n            app.kubernetes.io/instance: "{{ .Element.env }}"\n            com.example/team: "{{ .Element.team }}"\n        spec:\n          interval: 5m\n          path: "./examples/kustomize/environments/{{ .Element.env }}"\n          prune: true\n          sourceRef:\n            kind: GitRepository\n            name: go-demo-repo\n')),(0,r.kt)("p",null,"The generated elements are provided to the template in the ",(0,r.kt)("inlineCode",{parentName:"p"},"element")," scope, so\n",(0,r.kt)("inlineCode",{parentName:"p"},".Element.dev")," refers to the ",(0,r.kt)("inlineCode",{parentName:"p"},"dev")," field from the List element."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The output from all generators is exposed in the ",(0,r.kt)("inlineCode",{parentName:"p"},"element")," scope, not just List\ngenerators.")),(0,r.kt)("h2",{id:"repeating-templates"},"Repeating templates"),(0,r.kt)("p",null,"The output from a generator is an array of JSON objects",(0,r.kt)("sup",{parentName:"p",id:"fnref-yaml"},(0,r.kt)("a",{parentName:"sup",href:"#fn-yaml",className:"footnote-ref"},"yaml")),", the keys of which can contain repeating elements, either further JSON objects, or scalar values."),(0,r.kt)("p",null,"It can be desirable to repeat a template for a repeated element in a generated\nvalue."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: templates.weave.works/v1alpha1\nkind: GitOpsSet\nmetadata:\n  name: repeated-gitopsset-sample\nspec:\n  generators:\n    - list:\n        elements:\n          - env: dev\n            team: dev-team\n            teams:\n              - name: "team1"\n              - name: "team2"\n              - name: "team3"\n          - env: staging\n            team: staging-team\n            teams:\n              - name: "team4"\n              - name: "team5"\n              - name: "team6"\n  templates:\n    - repeat: "{ .teams }"\n      content:\n        kind: ConfigMap\n        apiVersion: v1\n        metadata:\n          name: "{{ .Repeat.name }}-demo"\n        data:\n          name: "{{ .Repeat.name }}-demo"\n          team: "{{ .Element.team }}"\n')),(0,r.kt)("p",null,"The template ",(0,r.kt)("inlineCode",{parentName:"p"},"repeat")," field is a ",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/reference/kubectl/jsonpath/"},"JSONPath")," expression that is applied to each element during the template rendering."),(0,r.kt)("p",null,"Templates that use ",(0,r.kt)("inlineCode",{parentName:"p"},"repeat")," will have two separate scopes for the template params, ",(0,r.kt)("inlineCode",{parentName:"p"},".Element")," which is the top-level element generated by the generator, and the additional ",(0,r.kt)("inlineCode",{parentName:"p"},".Repeat")," scope, which is the repeating element."),(0,r.kt)("p",null,"In this case, six different ",(0,r.kt)("inlineCode",{parentName:"p"},"ConfigMaps"),' are generated, three for the "dev-team" and three for the "staging-team".'),(0,r.kt)("div",{className:"footnotes"},(0,r.kt)("hr",{parentName:"div"}),(0,r.kt)("ol",{parentName:"div"},(0,r.kt)("li",{parentName:"ol",id:"fn-yaml"},"These are written as YAML mappings",(0,r.kt)("a",{parentName:"li",href:"#fnref-yaml",className:"footnote-backref"},"\u21a9")))))}u.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=p(n),c=r,f=d["".concat(l,".").concat(c)]||d[c]||u[c]||s;return n?a.createElement(f,o(o({ref:t},m),{},{components:n})):a.createElement(f,o({ref:t},m))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=c;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<s;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"}}]);